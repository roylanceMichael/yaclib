buildscript {
  ext.kotlin_version = '1.2.31'
  ext.project_version = "0.274"
  ext.roylance_common_version = "0.26"

  repositories {
    mavenCentral()
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'
  }
}

group 'org.roylance'
version project_version

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
apply plugin: 'de.fuerstenau.buildconfig'

sourceCompatibility = 1.8

buildConfig {
  appName = project.name       // sets value of NAME field
  version = project_version // sets value of VERSION field,
  // 'unspecified' if project.version is not set

  clsName = 'BuildConfig'      // sets the name of the BuildConfig class
  packageName = project.group  // sets the package of the BuildConfig class,
  // 'de.fuerstenau.buildconfig' if project.group is not set
  charset = 'UTF-8'            // sets charset of the generated class,
  // 'UTF-8' if not set otherwise
  buildConfigField 'String', 'PROTOBUF_VERSION', '3.4.0'
  buildConfigField 'String', 'KOTLIN_VERSION', kotlin_version
  buildConfigField 'String', 'ROYLANCE_COMMON_VERSION', roylance_common_version
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.4.0"
  }
}

sourceSets {
  main {
    proto {
      // In addition to the default 'src/main/proto'
      srcDir 'src/main/proto'
      include 'src/main/proto/*.proto'
    }
  }
}

// just going to copy the protobuf files into the directory
task('protoOutputCopy', type: Copy) {
  dependsOn(':generateProto')
  from file("${projectDir}/build/generated/source/proto/main/java")
  into file("${projectDir}/src/main/java")
}

// delete the generated ones
task('deleteGenerated', type: Delete) {
  dependsOn(':protoOutputCopy')
  delete file("${projectDir}/build/generated/source/proto/main/java");
}

// compile kotlin as normal
compileKotlin {
  dependsOn('deleteGenerated')
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['mavenJava']
  publish = true
  pkg {
    repo = 'maven'
    name = "${rootProject.name}"
    userOrg = user
    licenses = ['MIT']
    labels = [rootProject.name]
    publicDownloadNumbers = true
    vcsUrl = 'https://github.com/roylanceMichael/yaclib.git'
    version {
      name = project_version
    }
  }
}

repositories {
  mavenCentral()
  maven { url 'http://dl.bintray.com/roylancemichael/maven' }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile "org.roylance:roylance.common:$roylance_common_version"

  compile 'commons-io:commons-io:2.5'
  compile 'org.apache.commons:commons-compress:1.12'
  compile 'org.apache.maven:maven-model:3.3.9'

  testCompile group: 'junit', name: 'junit', version: '4.11'
}

compileGroovy.dependsOn compileJava

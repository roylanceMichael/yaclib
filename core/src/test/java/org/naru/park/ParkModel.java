// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: park_model.proto

package org.naru.park;

public final class ParkModel {
  private ParkModel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.naru.park.BeaconType}
   */
  public enum BeaconType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TICKET = 0;</code>
     */
    TICKET(0),
    /**
     * <code>SYSTEM = 1;</code>
     */
    SYSTEM(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TICKET = 0;</code>
     */
    public static final int TICKET_VALUE = 0;
    /**
     * <code>SYSTEM = 1;</code>
     */
    public static final int SYSTEM_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BeaconType valueOf(int value) {
      return forNumber(value);
    }

    public static BeaconType forNumber(int value) {
      switch (value) {
        case 0: return TICKET;
        case 1: return SYSTEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BeaconType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BeaconType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BeaconType>() {
            public BeaconType findValueByNumber(int number) {
              return BeaconType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.naru.park.ParkModel.getDescriptor().getEnumTypes().get(0);
    }

    private static final BeaconType[] VALUES = values();

    public static BeaconType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BeaconType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.naru.park.BeaconType)
  }

  public interface BeaconOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.Beacon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string id1 = 2;</code>
     */
    java.lang.String getId1();
    /**
     * <code>string id1 = 2;</code>
     */
    com.google.protobuf.ByteString
        getId1Bytes();

    /**
     * <code>string id2 = 3;</code>
     */
    java.lang.String getId2();
    /**
     * <code>string id2 = 3;</code>
     */
    com.google.protobuf.ByteString
        getId2Bytes();

    /**
     * <code>string id3 = 4;</code>
     */
    java.lang.String getId3();
    /**
     * <code>string id3 = 4;</code>
     */
    com.google.protobuf.ByteString
        getId3Bytes();

    /**
     * <code>string description = 5;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 5;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
     */
    int getBeaconTypeValue();
    /**
     * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
     */
    org.naru.park.ParkModel.BeaconType getBeaconType();

    /**
     * <code>double annotated_lat = 7;</code>
     */
    double getAnnotatedLat();

    /**
     * <code>double annotated_long = 8;</code>
     */
    double getAnnotatedLong();

    /**
     * <code>string beacon_search = 9;</code>
     */
    java.lang.String getBeaconSearch();
    /**
     * <code>string beacon_search = 9;</code>
     */
    com.google.protobuf.ByteString
        getBeaconSearchBytes();
  }
  /**
   * Protobuf type {@code org.naru.park.Beacon}
   */
  public  static final class Beacon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.Beacon)
      BeaconOrBuilder {
    // Use Beacon.newBuilder() to construct.
    private Beacon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Beacon() {
      id_ = "";
      id1_ = "";
      id2_ = "";
      id3_ = "";
      description_ = "";
      beaconType_ = 0;
      annotatedLat_ = 0D;
      annotatedLong_ = 0D;
      beaconSearch_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Beacon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id1_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              id2_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              id3_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              beaconType_ = rawValue;
              break;
            }
            case 57: {

              annotatedLat_ = input.readDouble();
              break;
            }
            case 65: {

              annotatedLong_ = input.readDouble();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              beaconSearch_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_Beacon_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_Beacon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.Beacon.class, org.naru.park.ParkModel.Beacon.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID1_FIELD_NUMBER = 2;
    private volatile java.lang.Object id1_;
    /**
     * <code>string id1 = 2;</code>
     */
    public java.lang.String getId1() {
      java.lang.Object ref = id1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id1_ = s;
        return s;
      }
    }
    /**
     * <code>string id1 = 2;</code>
     */
    public com.google.protobuf.ByteString
        getId1Bytes() {
      java.lang.Object ref = id1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID2_FIELD_NUMBER = 3;
    private volatile java.lang.Object id2_;
    /**
     * <code>string id2 = 3;</code>
     */
    public java.lang.String getId2() {
      java.lang.Object ref = id2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id2_ = s;
        return s;
      }
    }
    /**
     * <code>string id2 = 3;</code>
     */
    public com.google.protobuf.ByteString
        getId2Bytes() {
      java.lang.Object ref = id2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID3_FIELD_NUMBER = 4;
    private volatile java.lang.Object id3_;
    /**
     * <code>string id3 = 4;</code>
     */
    public java.lang.String getId3() {
      java.lang.Object ref = id3_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id3_ = s;
        return s;
      }
    }
    /**
     * <code>string id3 = 4;</code>
     */
    public com.google.protobuf.ByteString
        getId3Bytes() {
      java.lang.Object ref = id3_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id3_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    private volatile java.lang.Object description_;
    /**
     * <code>string description = 5;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEACON_TYPE_FIELD_NUMBER = 6;
    private int beaconType_;
    /**
     * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
     */
    public int getBeaconTypeValue() {
      return beaconType_;
    }
    /**
     * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
     */
    public org.naru.park.ParkModel.BeaconType getBeaconType() {
      org.naru.park.ParkModel.BeaconType result = org.naru.park.ParkModel.BeaconType.valueOf(beaconType_);
      return result == null ? org.naru.park.ParkModel.BeaconType.UNRECOGNIZED : result;
    }

    public static final int ANNOTATED_LAT_FIELD_NUMBER = 7;
    private double annotatedLat_;
    /**
     * <code>double annotated_lat = 7;</code>
     */
    public double getAnnotatedLat() {
      return annotatedLat_;
    }

    public static final int ANNOTATED_LONG_FIELD_NUMBER = 8;
    private double annotatedLong_;
    /**
     * <code>double annotated_long = 8;</code>
     */
    public double getAnnotatedLong() {
      return annotatedLong_;
    }

    public static final int BEACON_SEARCH_FIELD_NUMBER = 9;
    private volatile java.lang.Object beaconSearch_;
    /**
     * <code>string beacon_search = 9;</code>
     */
    public java.lang.String getBeaconSearch() {
      java.lang.Object ref = beaconSearch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        beaconSearch_ = s;
        return s;
      }
    }
    /**
     * <code>string beacon_search = 9;</code>
     */
    public com.google.protobuf.ByteString
        getBeaconSearchBytes() {
      java.lang.Object ref = beaconSearch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        beaconSearch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getId1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id1_);
      }
      if (!getId2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id2_);
      }
      if (!getId3Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, id3_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, description_);
      }
      if (beaconType_ != org.naru.park.ParkModel.BeaconType.TICKET.getNumber()) {
        output.writeEnum(6, beaconType_);
      }
      if (annotatedLat_ != 0D) {
        output.writeDouble(7, annotatedLat_);
      }
      if (annotatedLong_ != 0D) {
        output.writeDouble(8, annotatedLong_);
      }
      if (!getBeaconSearchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, beaconSearch_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getId1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id1_);
      }
      if (!getId2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id2_);
      }
      if (!getId3Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, id3_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, description_);
      }
      if (beaconType_ != org.naru.park.ParkModel.BeaconType.TICKET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, beaconType_);
      }
      if (annotatedLat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, annotatedLat_);
      }
      if (annotatedLong_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, annotatedLong_);
      }
      if (!getBeaconSearchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, beaconSearch_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.Beacon)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.Beacon other = (org.naru.park.ParkModel.Beacon) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getId1()
          .equals(other.getId1());
      result = result && getId2()
          .equals(other.getId2());
      result = result && getId3()
          .equals(other.getId3());
      result = result && getDescription()
          .equals(other.getDescription());
      result = result && beaconType_ == other.beaconType_;
      result = result && (
          java.lang.Double.doubleToLongBits(getAnnotatedLat())
          == java.lang.Double.doubleToLongBits(
              other.getAnnotatedLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getAnnotatedLong())
          == java.lang.Double.doubleToLongBits(
              other.getAnnotatedLong()));
      result = result && getBeaconSearch()
          .equals(other.getBeaconSearch());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + ID1_FIELD_NUMBER;
      hash = (53 * hash) + getId1().hashCode();
      hash = (37 * hash) + ID2_FIELD_NUMBER;
      hash = (53 * hash) + getId2().hashCode();
      hash = (37 * hash) + ID3_FIELD_NUMBER;
      hash = (53 * hash) + getId3().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + BEACON_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + beaconType_;
      hash = (37 * hash) + ANNOTATED_LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAnnotatedLat()));
      hash = (37 * hash) + ANNOTATED_LONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAnnotatedLong()));
      hash = (37 * hash) + BEACON_SEARCH_FIELD_NUMBER;
      hash = (53 * hash) + getBeaconSearch().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.Beacon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Beacon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Beacon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Beacon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.Beacon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.Beacon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.Beacon)
        org.naru.park.ParkModel.BeaconOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Beacon_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Beacon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.Beacon.class, org.naru.park.ParkModel.Beacon.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.Beacon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        id1_ = "";

        id2_ = "";

        id3_ = "";

        description_ = "";

        beaconType_ = 0;

        annotatedLat_ = 0D;

        annotatedLong_ = 0D;

        beaconSearch_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Beacon_descriptor;
      }

      public org.naru.park.ParkModel.Beacon getDefaultInstanceForType() {
        return org.naru.park.ParkModel.Beacon.getDefaultInstance();
      }

      public org.naru.park.ParkModel.Beacon build() {
        org.naru.park.ParkModel.Beacon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.Beacon buildPartial() {
        org.naru.park.ParkModel.Beacon result = new org.naru.park.ParkModel.Beacon(this);
        result.id_ = id_;
        result.id1_ = id1_;
        result.id2_ = id2_;
        result.id3_ = id3_;
        result.description_ = description_;
        result.beaconType_ = beaconType_;
        result.annotatedLat_ = annotatedLat_;
        result.annotatedLong_ = annotatedLong_;
        result.beaconSearch_ = beaconSearch_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.Beacon) {
          return mergeFrom((org.naru.park.ParkModel.Beacon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.Beacon other) {
        if (other == org.naru.park.ParkModel.Beacon.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getId1().isEmpty()) {
          id1_ = other.id1_;
          onChanged();
        }
        if (!other.getId2().isEmpty()) {
          id2_ = other.id2_;
          onChanged();
        }
        if (!other.getId3().isEmpty()) {
          id3_ = other.id3_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.beaconType_ != 0) {
          setBeaconTypeValue(other.getBeaconTypeValue());
        }
        if (other.getAnnotatedLat() != 0D) {
          setAnnotatedLat(other.getAnnotatedLat());
        }
        if (other.getAnnotatedLong() != 0D) {
          setAnnotatedLong(other.getAnnotatedLong());
        }
        if (!other.getBeaconSearch().isEmpty()) {
          beaconSearch_ = other.beaconSearch_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.Beacon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.Beacon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id1_ = "";
      /**
       * <code>string id1 = 2;</code>
       */
      public java.lang.String getId1() {
        java.lang.Object ref = id1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id1 = 2;</code>
       */
      public com.google.protobuf.ByteString
          getId1Bytes() {
        java.lang.Object ref = id1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id1 = 2;</code>
       */
      public Builder setId1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id1 = 2;</code>
       */
      public Builder clearId1() {
        
        id1_ = getDefaultInstance().getId1();
        onChanged();
        return this;
      }
      /**
       * <code>string id1 = 2;</code>
       */
      public Builder setId1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id2_ = "";
      /**
       * <code>string id2 = 3;</code>
       */
      public java.lang.String getId2() {
        java.lang.Object ref = id2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id2 = 3;</code>
       */
      public com.google.protobuf.ByteString
          getId2Bytes() {
        java.lang.Object ref = id2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id2 = 3;</code>
       */
      public Builder setId2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id2 = 3;</code>
       */
      public Builder clearId2() {
        
        id2_ = getDefaultInstance().getId2();
        onChanged();
        return this;
      }
      /**
       * <code>string id2 = 3;</code>
       */
      public Builder setId2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id2_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id3_ = "";
      /**
       * <code>string id3 = 4;</code>
       */
      public java.lang.String getId3() {
        java.lang.Object ref = id3_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id3_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id3 = 4;</code>
       */
      public com.google.protobuf.ByteString
          getId3Bytes() {
        java.lang.Object ref = id3_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id3 = 4;</code>
       */
      public Builder setId3(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id3 = 4;</code>
       */
      public Builder clearId3() {
        
        id3_ = getDefaultInstance().getId3();
        onChanged();
        return this;
      }
      /**
       * <code>string id3 = 4;</code>
       */
      public Builder setId3Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id3_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>string description = 5;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 5;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 5;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string description = 5;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private int beaconType_ = 0;
      /**
       * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
       */
      public int getBeaconTypeValue() {
        return beaconType_;
      }
      /**
       * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
       */
      public Builder setBeaconTypeValue(int value) {
        beaconType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
       */
      public org.naru.park.ParkModel.BeaconType getBeaconType() {
        org.naru.park.ParkModel.BeaconType result = org.naru.park.ParkModel.BeaconType.valueOf(beaconType_);
        return result == null ? org.naru.park.ParkModel.BeaconType.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
       */
      public Builder setBeaconType(org.naru.park.ParkModel.BeaconType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        beaconType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.naru.park.BeaconType beacon_type = 6;</code>
       */
      public Builder clearBeaconType() {
        
        beaconType_ = 0;
        onChanged();
        return this;
      }

      private double annotatedLat_ ;
      /**
       * <code>double annotated_lat = 7;</code>
       */
      public double getAnnotatedLat() {
        return annotatedLat_;
      }
      /**
       * <code>double annotated_lat = 7;</code>
       */
      public Builder setAnnotatedLat(double value) {
        
        annotatedLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double annotated_lat = 7;</code>
       */
      public Builder clearAnnotatedLat() {
        
        annotatedLat_ = 0D;
        onChanged();
        return this;
      }

      private double annotatedLong_ ;
      /**
       * <code>double annotated_long = 8;</code>
       */
      public double getAnnotatedLong() {
        return annotatedLong_;
      }
      /**
       * <code>double annotated_long = 8;</code>
       */
      public Builder setAnnotatedLong(double value) {
        
        annotatedLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double annotated_long = 8;</code>
       */
      public Builder clearAnnotatedLong() {
        
        annotatedLong_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object beaconSearch_ = "";
      /**
       * <code>string beacon_search = 9;</code>
       */
      public java.lang.String getBeaconSearch() {
        java.lang.Object ref = beaconSearch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          beaconSearch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string beacon_search = 9;</code>
       */
      public com.google.protobuf.ByteString
          getBeaconSearchBytes() {
        java.lang.Object ref = beaconSearch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          beaconSearch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string beacon_search = 9;</code>
       */
      public Builder setBeaconSearch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        beaconSearch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string beacon_search = 9;</code>
       */
      public Builder clearBeaconSearch() {
        
        beaconSearch_ = getDefaultInstance().getBeaconSearch();
        onChanged();
        return this;
      }
      /**
       * <code>string beacon_search = 9;</code>
       */
      public Builder setBeaconSearchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        beaconSearch_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.Beacon)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.Beacon)
    private static final org.naru.park.ParkModel.Beacon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.Beacon();
    }

    public static org.naru.park.ParkModel.Beacon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Beacon>
        PARSER = new com.google.protobuf.AbstractParser<Beacon>() {
      public Beacon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Beacon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Beacon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Beacon> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.Beacon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RecordedUserTicketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.RecordedUserTicket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>int64 recorded_date = 2;</code>
     */
    long getRecordedDate();

    /**
     * <code>string id1 = 3;</code>
     */
    java.lang.String getId1();
    /**
     * <code>string id1 = 3;</code>
     */
    com.google.protobuf.ByteString
        getId1Bytes();

    /**
     * <code>string id2 = 4;</code>
     */
    java.lang.String getId2();
    /**
     * <code>string id2 = 4;</code>
     */
    com.google.protobuf.ByteString
        getId2Bytes();

    /**
     * <code>string id3 = 5;</code>
     */
    java.lang.String getId3();
    /**
     * <code>string id3 = 5;</code>
     */
    com.google.protobuf.ByteString
        getId3Bytes();

    /**
     * <code>string sensor_id = 6;</code>
     */
    java.lang.String getSensorId();
    /**
     * <code>string sensor_id = 6;</code>
     */
    com.google.protobuf.ByteString
        getSensorIdBytes();

    /**
     * <code>string sensor_name = 7;</code>
     */
    java.lang.String getSensorName();
    /**
     * <code>string sensor_name = 7;</code>
     */
    com.google.protobuf.ByteString
        getSensorNameBytes();

    /**
     * <code>string sensor_description = 8;</code>
     */
    java.lang.String getSensorDescription();
    /**
     * <code>string sensor_description = 8;</code>
     */
    com.google.protobuf.ByteString
        getSensorDescriptionBytes();

    /**
     * <code>double distance_from_sensor = 9;</code>
     */
    double getDistanceFromSensor();

    /**
     * <code>double sensor_lat = 10;</code>
     */
    double getSensorLat();

    /**
     * <code>double sensor_long = 11;</code>
     */
    double getSensorLong();

    /**
     * <code>string sensor_connected_wifi = 12;</code>
     */
    java.lang.String getSensorConnectedWifi();
    /**
     * <code>string sensor_connected_wifi = 12;</code>
     */
    com.google.protobuf.ByteString
        getSensorConnectedWifiBytes();

    /**
     * <code>int32 connected_wifi_rssi = 13;</code>
     */
    int getConnectedWifiRssi();

    /**
     * <code>string beacon_search = 14;</code>
     */
    java.lang.String getBeaconSearch();
    /**
     * <code>string beacon_search = 14;</code>
     */
    com.google.protobuf.ByteString
        getBeaconSearchBytes();
  }
  /**
   * Protobuf type {@code org.naru.park.RecordedUserTicket}
   */
  public  static final class RecordedUserTicket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.RecordedUserTicket)
      RecordedUserTicketOrBuilder {
    // Use RecordedUserTicket.newBuilder() to construct.
    private RecordedUserTicket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RecordedUserTicket() {
      id_ = "";
      recordedDate_ = 0L;
      id1_ = "";
      id2_ = "";
      id3_ = "";
      sensorId_ = "";
      sensorName_ = "";
      sensorDescription_ = "";
      distanceFromSensor_ = 0D;
      sensorLat_ = 0D;
      sensorLong_ = 0D;
      sensorConnectedWifi_ = "";
      connectedWifiRssi_ = 0;
      beaconSearch_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RecordedUserTicket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              recordedDate_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              id1_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              id2_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              id3_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorId_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorName_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorDescription_ = s;
              break;
            }
            case 73: {

              distanceFromSensor_ = input.readDouble();
              break;
            }
            case 81: {

              sensorLat_ = input.readDouble();
              break;
            }
            case 89: {

              sensorLong_ = input.readDouble();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              sensorConnectedWifi_ = s;
              break;
            }
            case 104: {

              connectedWifiRssi_ = input.readInt32();
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              beaconSearch_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_RecordedUserTicket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_RecordedUserTicket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.RecordedUserTicket.class, org.naru.park.ParkModel.RecordedUserTicket.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECORDED_DATE_FIELD_NUMBER = 2;
    private long recordedDate_;
    /**
     * <code>int64 recorded_date = 2;</code>
     */
    public long getRecordedDate() {
      return recordedDate_;
    }

    public static final int ID1_FIELD_NUMBER = 3;
    private volatile java.lang.Object id1_;
    /**
     * <code>string id1 = 3;</code>
     */
    public java.lang.String getId1() {
      java.lang.Object ref = id1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id1_ = s;
        return s;
      }
    }
    /**
     * <code>string id1 = 3;</code>
     */
    public com.google.protobuf.ByteString
        getId1Bytes() {
      java.lang.Object ref = id1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID2_FIELD_NUMBER = 4;
    private volatile java.lang.Object id2_;
    /**
     * <code>string id2 = 4;</code>
     */
    public java.lang.String getId2() {
      java.lang.Object ref = id2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id2_ = s;
        return s;
      }
    }
    /**
     * <code>string id2 = 4;</code>
     */
    public com.google.protobuf.ByteString
        getId2Bytes() {
      java.lang.Object ref = id2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID3_FIELD_NUMBER = 5;
    private volatile java.lang.Object id3_;
    /**
     * <code>string id3 = 5;</code>
     */
    public java.lang.String getId3() {
      java.lang.Object ref = id3_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id3_ = s;
        return s;
      }
    }
    /**
     * <code>string id3 = 5;</code>
     */
    public com.google.protobuf.ByteString
        getId3Bytes() {
      java.lang.Object ref = id3_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id3_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSOR_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object sensorId_;
    /**
     * <code>string sensor_id = 6;</code>
     */
    public java.lang.String getSensorId() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorId_ = s;
        return s;
      }
    }
    /**
     * <code>string sensor_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSensorIdBytes() {
      java.lang.Object ref = sensorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSOR_NAME_FIELD_NUMBER = 7;
    private volatile java.lang.Object sensorName_;
    /**
     * <code>string sensor_name = 7;</code>
     */
    public java.lang.String getSensorName() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorName_ = s;
        return s;
      }
    }
    /**
     * <code>string sensor_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getSensorNameBytes() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSOR_DESCRIPTION_FIELD_NUMBER = 8;
    private volatile java.lang.Object sensorDescription_;
    /**
     * <code>string sensor_description = 8;</code>
     */
    public java.lang.String getSensorDescription() {
      java.lang.Object ref = sensorDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string sensor_description = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSensorDescriptionBytes() {
      java.lang.Object ref = sensorDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISTANCE_FROM_SENSOR_FIELD_NUMBER = 9;
    private double distanceFromSensor_;
    /**
     * <code>double distance_from_sensor = 9;</code>
     */
    public double getDistanceFromSensor() {
      return distanceFromSensor_;
    }

    public static final int SENSOR_LAT_FIELD_NUMBER = 10;
    private double sensorLat_;
    /**
     * <code>double sensor_lat = 10;</code>
     */
    public double getSensorLat() {
      return sensorLat_;
    }

    public static final int SENSOR_LONG_FIELD_NUMBER = 11;
    private double sensorLong_;
    /**
     * <code>double sensor_long = 11;</code>
     */
    public double getSensorLong() {
      return sensorLong_;
    }

    public static final int SENSOR_CONNECTED_WIFI_FIELD_NUMBER = 12;
    private volatile java.lang.Object sensorConnectedWifi_;
    /**
     * <code>string sensor_connected_wifi = 12;</code>
     */
    public java.lang.String getSensorConnectedWifi() {
      java.lang.Object ref = sensorConnectedWifi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sensorConnectedWifi_ = s;
        return s;
      }
    }
    /**
     * <code>string sensor_connected_wifi = 12;</code>
     */
    public com.google.protobuf.ByteString
        getSensorConnectedWifiBytes() {
      java.lang.Object ref = sensorConnectedWifi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorConnectedWifi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONNECTED_WIFI_RSSI_FIELD_NUMBER = 13;
    private int connectedWifiRssi_;
    /**
     * <code>int32 connected_wifi_rssi = 13;</code>
     */
    public int getConnectedWifiRssi() {
      return connectedWifiRssi_;
    }

    public static final int BEACON_SEARCH_FIELD_NUMBER = 14;
    private volatile java.lang.Object beaconSearch_;
    /**
     * <code>string beacon_search = 14;</code>
     */
    public java.lang.String getBeaconSearch() {
      java.lang.Object ref = beaconSearch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        beaconSearch_ = s;
        return s;
      }
    }
    /**
     * <code>string beacon_search = 14;</code>
     */
    public com.google.protobuf.ByteString
        getBeaconSearchBytes() {
      java.lang.Object ref = beaconSearch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        beaconSearch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (recordedDate_ != 0L) {
        output.writeInt64(2, recordedDate_);
      }
      if (!getId1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, id1_);
      }
      if (!getId2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, id2_);
      }
      if (!getId3Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, id3_);
      }
      if (!getSensorIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, sensorId_);
      }
      if (!getSensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, sensorName_);
      }
      if (!getSensorDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, sensorDescription_);
      }
      if (distanceFromSensor_ != 0D) {
        output.writeDouble(9, distanceFromSensor_);
      }
      if (sensorLat_ != 0D) {
        output.writeDouble(10, sensorLat_);
      }
      if (sensorLong_ != 0D) {
        output.writeDouble(11, sensorLong_);
      }
      if (!getSensorConnectedWifiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, sensorConnectedWifi_);
      }
      if (connectedWifiRssi_ != 0) {
        output.writeInt32(13, connectedWifiRssi_);
      }
      if (!getBeaconSearchBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, beaconSearch_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (recordedDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, recordedDate_);
      }
      if (!getId1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, id1_);
      }
      if (!getId2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, id2_);
      }
      if (!getId3Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, id3_);
      }
      if (!getSensorIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, sensorId_);
      }
      if (!getSensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, sensorName_);
      }
      if (!getSensorDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, sensorDescription_);
      }
      if (distanceFromSensor_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, distanceFromSensor_);
      }
      if (sensorLat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, sensorLat_);
      }
      if (sensorLong_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, sensorLong_);
      }
      if (!getSensorConnectedWifiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, sensorConnectedWifi_);
      }
      if (connectedWifiRssi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, connectedWifiRssi_);
      }
      if (!getBeaconSearchBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, beaconSearch_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.RecordedUserTicket)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.RecordedUserTicket other = (org.naru.park.ParkModel.RecordedUserTicket) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getRecordedDate()
          == other.getRecordedDate());
      result = result && getId1()
          .equals(other.getId1());
      result = result && getId2()
          .equals(other.getId2());
      result = result && getId3()
          .equals(other.getId3());
      result = result && getSensorId()
          .equals(other.getSensorId());
      result = result && getSensorName()
          .equals(other.getSensorName());
      result = result && getSensorDescription()
          .equals(other.getSensorDescription());
      result = result && (
          java.lang.Double.doubleToLongBits(getDistanceFromSensor())
          == java.lang.Double.doubleToLongBits(
              other.getDistanceFromSensor()));
      result = result && (
          java.lang.Double.doubleToLongBits(getSensorLat())
          == java.lang.Double.doubleToLongBits(
              other.getSensorLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getSensorLong())
          == java.lang.Double.doubleToLongBits(
              other.getSensorLong()));
      result = result && getSensorConnectedWifi()
          .equals(other.getSensorConnectedWifi());
      result = result && (getConnectedWifiRssi()
          == other.getConnectedWifiRssi());
      result = result && getBeaconSearch()
          .equals(other.getBeaconSearch());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + RECORDED_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecordedDate());
      hash = (37 * hash) + ID1_FIELD_NUMBER;
      hash = (53 * hash) + getId1().hashCode();
      hash = (37 * hash) + ID2_FIELD_NUMBER;
      hash = (53 * hash) + getId2().hashCode();
      hash = (37 * hash) + ID3_FIELD_NUMBER;
      hash = (53 * hash) + getId3().hashCode();
      hash = (37 * hash) + SENSOR_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSensorId().hashCode();
      hash = (37 * hash) + SENSOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSensorName().hashCode();
      hash = (37 * hash) + SENSOR_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getSensorDescription().hashCode();
      hash = (37 * hash) + DISTANCE_FROM_SENSOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getDistanceFromSensor()));
      hash = (37 * hash) + SENSOR_LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSensorLat()));
      hash = (37 * hash) + SENSOR_LONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSensorLong()));
      hash = (37 * hash) + SENSOR_CONNECTED_WIFI_FIELD_NUMBER;
      hash = (53 * hash) + getSensorConnectedWifi().hashCode();
      hash = (37 * hash) + CONNECTED_WIFI_RSSI_FIELD_NUMBER;
      hash = (53 * hash) + getConnectedWifiRssi();
      hash = (37 * hash) + BEACON_SEARCH_FIELD_NUMBER;
      hash = (53 * hash) + getBeaconSearch().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.RecordedUserTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.RecordedUserTicket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.RecordedUserTicket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.RecordedUserTicket)
        org.naru.park.ParkModel.RecordedUserTicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_RecordedUserTicket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_RecordedUserTicket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.RecordedUserTicket.class, org.naru.park.ParkModel.RecordedUserTicket.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.RecordedUserTicket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        recordedDate_ = 0L;

        id1_ = "";

        id2_ = "";

        id3_ = "";

        sensorId_ = "";

        sensorName_ = "";

        sensorDescription_ = "";

        distanceFromSensor_ = 0D;

        sensorLat_ = 0D;

        sensorLong_ = 0D;

        sensorConnectedWifi_ = "";

        connectedWifiRssi_ = 0;

        beaconSearch_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_RecordedUserTicket_descriptor;
      }

      public org.naru.park.ParkModel.RecordedUserTicket getDefaultInstanceForType() {
        return org.naru.park.ParkModel.RecordedUserTicket.getDefaultInstance();
      }

      public org.naru.park.ParkModel.RecordedUserTicket build() {
        org.naru.park.ParkModel.RecordedUserTicket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.RecordedUserTicket buildPartial() {
        org.naru.park.ParkModel.RecordedUserTicket result = new org.naru.park.ParkModel.RecordedUserTicket(this);
        result.id_ = id_;
        result.recordedDate_ = recordedDate_;
        result.id1_ = id1_;
        result.id2_ = id2_;
        result.id3_ = id3_;
        result.sensorId_ = sensorId_;
        result.sensorName_ = sensorName_;
        result.sensorDescription_ = sensorDescription_;
        result.distanceFromSensor_ = distanceFromSensor_;
        result.sensorLat_ = sensorLat_;
        result.sensorLong_ = sensorLong_;
        result.sensorConnectedWifi_ = sensorConnectedWifi_;
        result.connectedWifiRssi_ = connectedWifiRssi_;
        result.beaconSearch_ = beaconSearch_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.RecordedUserTicket) {
          return mergeFrom((org.naru.park.ParkModel.RecordedUserTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.RecordedUserTicket other) {
        if (other == org.naru.park.ParkModel.RecordedUserTicket.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getRecordedDate() != 0L) {
          setRecordedDate(other.getRecordedDate());
        }
        if (!other.getId1().isEmpty()) {
          id1_ = other.id1_;
          onChanged();
        }
        if (!other.getId2().isEmpty()) {
          id2_ = other.id2_;
          onChanged();
        }
        if (!other.getId3().isEmpty()) {
          id3_ = other.id3_;
          onChanged();
        }
        if (!other.getSensorId().isEmpty()) {
          sensorId_ = other.sensorId_;
          onChanged();
        }
        if (!other.getSensorName().isEmpty()) {
          sensorName_ = other.sensorName_;
          onChanged();
        }
        if (!other.getSensorDescription().isEmpty()) {
          sensorDescription_ = other.sensorDescription_;
          onChanged();
        }
        if (other.getDistanceFromSensor() != 0D) {
          setDistanceFromSensor(other.getDistanceFromSensor());
        }
        if (other.getSensorLat() != 0D) {
          setSensorLat(other.getSensorLat());
        }
        if (other.getSensorLong() != 0D) {
          setSensorLong(other.getSensorLong());
        }
        if (!other.getSensorConnectedWifi().isEmpty()) {
          sensorConnectedWifi_ = other.sensorConnectedWifi_;
          onChanged();
        }
        if (other.getConnectedWifiRssi() != 0) {
          setConnectedWifiRssi(other.getConnectedWifiRssi());
        }
        if (!other.getBeaconSearch().isEmpty()) {
          beaconSearch_ = other.beaconSearch_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.RecordedUserTicket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.RecordedUserTicket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private long recordedDate_ ;
      /**
       * <code>int64 recorded_date = 2;</code>
       */
      public long getRecordedDate() {
        return recordedDate_;
      }
      /**
       * <code>int64 recorded_date = 2;</code>
       */
      public Builder setRecordedDate(long value) {
        
        recordedDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 recorded_date = 2;</code>
       */
      public Builder clearRecordedDate() {
        
        recordedDate_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object id1_ = "";
      /**
       * <code>string id1 = 3;</code>
       */
      public java.lang.String getId1() {
        java.lang.Object ref = id1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id1 = 3;</code>
       */
      public com.google.protobuf.ByteString
          getId1Bytes() {
        java.lang.Object ref = id1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id1 = 3;</code>
       */
      public Builder setId1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id1 = 3;</code>
       */
      public Builder clearId1() {
        
        id1_ = getDefaultInstance().getId1();
        onChanged();
        return this;
      }
      /**
       * <code>string id1 = 3;</code>
       */
      public Builder setId1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id2_ = "";
      /**
       * <code>string id2 = 4;</code>
       */
      public java.lang.String getId2() {
        java.lang.Object ref = id2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id2 = 4;</code>
       */
      public com.google.protobuf.ByteString
          getId2Bytes() {
        java.lang.Object ref = id2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id2 = 4;</code>
       */
      public Builder setId2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id2 = 4;</code>
       */
      public Builder clearId2() {
        
        id2_ = getDefaultInstance().getId2();
        onChanged();
        return this;
      }
      /**
       * <code>string id2 = 4;</code>
       */
      public Builder setId2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id2_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object id3_ = "";
      /**
       * <code>string id3 = 5;</code>
       */
      public java.lang.String getId3() {
        java.lang.Object ref = id3_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id3_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id3 = 5;</code>
       */
      public com.google.protobuf.ByteString
          getId3Bytes() {
        java.lang.Object ref = id3_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id3 = 5;</code>
       */
      public Builder setId3(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id3 = 5;</code>
       */
      public Builder clearId3() {
        
        id3_ = getDefaultInstance().getId3();
        onChanged();
        return this;
      }
      /**
       * <code>string id3 = 5;</code>
       */
      public Builder setId3Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id3_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sensorId_ = "";
      /**
       * <code>string sensor_id = 6;</code>
       */
      public java.lang.String getSensorId() {
        java.lang.Object ref = sensorId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sensor_id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getSensorIdBytes() {
        java.lang.Object ref = sensorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sensor_id = 6;</code>
       */
      public Builder setSensorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_id = 6;</code>
       */
      public Builder clearSensorId() {
        
        sensorId_ = getDefaultInstance().getSensorId();
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_id = 6;</code>
       */
      public Builder setSensorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sensorName_ = "";
      /**
       * <code>string sensor_name = 7;</code>
       */
      public java.lang.String getSensorName() {
        java.lang.Object ref = sensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sensor_name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getSensorNameBytes() {
        java.lang.Object ref = sensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sensor_name = 7;</code>
       */
      public Builder setSensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_name = 7;</code>
       */
      public Builder clearSensorName() {
        
        sensorName_ = getDefaultInstance().getSensorName();
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_name = 7;</code>
       */
      public Builder setSensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sensorDescription_ = "";
      /**
       * <code>string sensor_description = 8;</code>
       */
      public java.lang.String getSensorDescription() {
        java.lang.Object ref = sensorDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sensor_description = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSensorDescriptionBytes() {
        java.lang.Object ref = sensorDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sensor_description = 8;</code>
       */
      public Builder setSensorDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_description = 8;</code>
       */
      public Builder clearSensorDescription() {
        
        sensorDescription_ = getDefaultInstance().getSensorDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_description = 8;</code>
       */
      public Builder setSensorDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorDescription_ = value;
        onChanged();
        return this;
      }

      private double distanceFromSensor_ ;
      /**
       * <code>double distance_from_sensor = 9;</code>
       */
      public double getDistanceFromSensor() {
        return distanceFromSensor_;
      }
      /**
       * <code>double distance_from_sensor = 9;</code>
       */
      public Builder setDistanceFromSensor(double value) {
        
        distanceFromSensor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double distance_from_sensor = 9;</code>
       */
      public Builder clearDistanceFromSensor() {
        
        distanceFromSensor_ = 0D;
        onChanged();
        return this;
      }

      private double sensorLat_ ;
      /**
       * <code>double sensor_lat = 10;</code>
       */
      public double getSensorLat() {
        return sensorLat_;
      }
      /**
       * <code>double sensor_lat = 10;</code>
       */
      public Builder setSensorLat(double value) {
        
        sensorLat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double sensor_lat = 10;</code>
       */
      public Builder clearSensorLat() {
        
        sensorLat_ = 0D;
        onChanged();
        return this;
      }

      private double sensorLong_ ;
      /**
       * <code>double sensor_long = 11;</code>
       */
      public double getSensorLong() {
        return sensorLong_;
      }
      /**
       * <code>double sensor_long = 11;</code>
       */
      public Builder setSensorLong(double value) {
        
        sensorLong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double sensor_long = 11;</code>
       */
      public Builder clearSensorLong() {
        
        sensorLong_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object sensorConnectedWifi_ = "";
      /**
       * <code>string sensor_connected_wifi = 12;</code>
       */
      public java.lang.String getSensorConnectedWifi() {
        java.lang.Object ref = sensorConnectedWifi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sensorConnectedWifi_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sensor_connected_wifi = 12;</code>
       */
      public com.google.protobuf.ByteString
          getSensorConnectedWifiBytes() {
        java.lang.Object ref = sensorConnectedWifi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorConnectedWifi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sensor_connected_wifi = 12;</code>
       */
      public Builder setSensorConnectedWifi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sensorConnectedWifi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_connected_wifi = 12;</code>
       */
      public Builder clearSensorConnectedWifi() {
        
        sensorConnectedWifi_ = getDefaultInstance().getSensorConnectedWifi();
        onChanged();
        return this;
      }
      /**
       * <code>string sensor_connected_wifi = 12;</code>
       */
      public Builder setSensorConnectedWifiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sensorConnectedWifi_ = value;
        onChanged();
        return this;
      }

      private int connectedWifiRssi_ ;
      /**
       * <code>int32 connected_wifi_rssi = 13;</code>
       */
      public int getConnectedWifiRssi() {
        return connectedWifiRssi_;
      }
      /**
       * <code>int32 connected_wifi_rssi = 13;</code>
       */
      public Builder setConnectedWifiRssi(int value) {
        
        connectedWifiRssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 connected_wifi_rssi = 13;</code>
       */
      public Builder clearConnectedWifiRssi() {
        
        connectedWifiRssi_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object beaconSearch_ = "";
      /**
       * <code>string beacon_search = 14;</code>
       */
      public java.lang.String getBeaconSearch() {
        java.lang.Object ref = beaconSearch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          beaconSearch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string beacon_search = 14;</code>
       */
      public com.google.protobuf.ByteString
          getBeaconSearchBytes() {
        java.lang.Object ref = beaconSearch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          beaconSearch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string beacon_search = 14;</code>
       */
      public Builder setBeaconSearch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        beaconSearch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string beacon_search = 14;</code>
       */
      public Builder clearBeaconSearch() {
        
        beaconSearch_ = getDefaultInstance().getBeaconSearch();
        onChanged();
        return this;
      }
      /**
       * <code>string beacon_search = 14;</code>
       */
      public Builder setBeaconSearchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        beaconSearch_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.RecordedUserTicket)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.RecordedUserTicket)
    private static final org.naru.park.ParkModel.RecordedUserTicket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.RecordedUserTicket();
    }

    public static org.naru.park.ParkModel.RecordedUserTicket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RecordedUserTicket>
        PARSER = new com.google.protobuf.AbstractParser<RecordedUserTicket>() {
      public RecordedUserTicket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecordedUserTicket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RecordedUserTicket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RecordedUserTicket> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.RecordedUserTicket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserTicketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.UserTicket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string user_id = 2;</code>
     */
    java.lang.String getUserId();
    /**
     * <code>string user_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    boolean hasBeacon();
    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    org.naru.park.ParkModel.Beacon getBeacon();
    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder();

    /**
     * <code>int64 issue_date = 4;</code>
     */
    long getIssueDate();

    /**
     * <code>int64 expiration_date = 5;</code>
     */
    long getExpirationDate();

    /**
     * <code>string display = 6;</code>
     */
    java.lang.String getDisplay();
    /**
     * <code>string display = 6;</code>
     */
    com.google.protobuf.ByteString
        getDisplayBytes();
  }
  /**
   * Protobuf type {@code org.naru.park.UserTicket}
   */
  public  static final class UserTicket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.UserTicket)
      UserTicketOrBuilder {
    // Use UserTicket.newBuilder() to construct.
    private UserTicket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserTicket() {
      id_ = "";
      userId_ = "";
      issueDate_ = 0L;
      expirationDate_ = 0L;
      display_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UserTicket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 26: {
              org.naru.park.ParkModel.Beacon.Builder subBuilder = null;
              if (beacon_ != null) {
                subBuilder = beacon_.toBuilder();
              }
              beacon_ = input.readMessage(org.naru.park.ParkModel.Beacon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(beacon_);
                beacon_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              issueDate_ = input.readInt64();
              break;
            }
            case 40: {

              expirationDate_ = input.readInt64();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              display_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UserTicket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UserTicket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.UserTicket.class, org.naru.park.ParkModel.UserTicket.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object userId_;
    /**
     * <code>string user_id = 2;</code>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <code>string user_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEACON_FIELD_NUMBER = 3;
    private org.naru.park.ParkModel.Beacon beacon_;
    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    public boolean hasBeacon() {
      return beacon_ != null;
    }
    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    public org.naru.park.ParkModel.Beacon getBeacon() {
      return beacon_ == null ? org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
    }
    /**
     * <code>.org.naru.park.Beacon beacon = 3;</code>
     */
    public org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder() {
      return getBeacon();
    }

    public static final int ISSUE_DATE_FIELD_NUMBER = 4;
    private long issueDate_;
    /**
     * <code>int64 issue_date = 4;</code>
     */
    public long getIssueDate() {
      return issueDate_;
    }

    public static final int EXPIRATION_DATE_FIELD_NUMBER = 5;
    private long expirationDate_;
    /**
     * <code>int64 expiration_date = 5;</code>
     */
    public long getExpirationDate() {
      return expirationDate_;
    }

    public static final int DISPLAY_FIELD_NUMBER = 6;
    private volatile java.lang.Object display_;
    /**
     * <code>string display = 6;</code>
     */
    public java.lang.String getDisplay() {
      java.lang.Object ref = display_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        display_ = s;
        return s;
      }
    }
    /**
     * <code>string display = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDisplayBytes() {
      java.lang.Object ref = display_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        display_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, userId_);
      }
      if (beacon_ != null) {
        output.writeMessage(3, getBeacon());
      }
      if (issueDate_ != 0L) {
        output.writeInt64(4, issueDate_);
      }
      if (expirationDate_ != 0L) {
        output.writeInt64(5, expirationDate_);
      }
      if (!getDisplayBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, display_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, userId_);
      }
      if (beacon_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBeacon());
      }
      if (issueDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, issueDate_);
      }
      if (expirationDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, expirationDate_);
      }
      if (!getDisplayBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, display_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.UserTicket)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.UserTicket other = (org.naru.park.ParkModel.UserTicket) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && (hasBeacon() == other.hasBeacon());
      if (hasBeacon()) {
        result = result && getBeacon()
            .equals(other.getBeacon());
      }
      result = result && (getIssueDate()
          == other.getIssueDate());
      result = result && (getExpirationDate()
          == other.getExpirationDate());
      result = result && getDisplay()
          .equals(other.getDisplay());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      if (hasBeacon()) {
        hash = (37 * hash) + BEACON_FIELD_NUMBER;
        hash = (53 * hash) + getBeacon().hashCode();
      }
      hash = (37 * hash) + ISSUE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIssueDate());
      hash = (37 * hash) + EXPIRATION_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExpirationDate());
      hash = (37 * hash) + DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getDisplay().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.UserTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UserTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UserTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UserTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.UserTicket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.UserTicket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.UserTicket)
        org.naru.park.ParkModel.UserTicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UserTicket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UserTicket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.UserTicket.class, org.naru.park.ParkModel.UserTicket.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.UserTicket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        userId_ = "";

        if (beaconBuilder_ == null) {
          beacon_ = null;
        } else {
          beacon_ = null;
          beaconBuilder_ = null;
        }
        issueDate_ = 0L;

        expirationDate_ = 0L;

        display_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UserTicket_descriptor;
      }

      public org.naru.park.ParkModel.UserTicket getDefaultInstanceForType() {
        return org.naru.park.ParkModel.UserTicket.getDefaultInstance();
      }

      public org.naru.park.ParkModel.UserTicket build() {
        org.naru.park.ParkModel.UserTicket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.UserTicket buildPartial() {
        org.naru.park.ParkModel.UserTicket result = new org.naru.park.ParkModel.UserTicket(this);
        result.id_ = id_;
        result.userId_ = userId_;
        if (beaconBuilder_ == null) {
          result.beacon_ = beacon_;
        } else {
          result.beacon_ = beaconBuilder_.build();
        }
        result.issueDate_ = issueDate_;
        result.expirationDate_ = expirationDate_;
        result.display_ = display_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.UserTicket) {
          return mergeFrom((org.naru.park.ParkModel.UserTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.UserTicket other) {
        if (other == org.naru.park.ParkModel.UserTicket.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasBeacon()) {
          mergeBeacon(other.getBeacon());
        }
        if (other.getIssueDate() != 0L) {
          setIssueDate(other.getIssueDate());
        }
        if (other.getExpirationDate() != 0L) {
          setExpirationDate(other.getExpirationDate());
        }
        if (!other.getDisplay().isEmpty()) {
          display_ = other.display_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.UserTicket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.UserTicket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object userId_ = "";
      /**
       * <code>string user_id = 2;</code>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string user_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string user_id = 2;</code>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 2;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>string user_id = 2;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private org.naru.park.ParkModel.Beacon beacon_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> beaconBuilder_;
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public boolean hasBeacon() {
        return beaconBuilder_ != null || beacon_ != null;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public org.naru.park.ParkModel.Beacon getBeacon() {
        if (beaconBuilder_ == null) {
          return beacon_ == null ? org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
        } else {
          return beaconBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public Builder setBeacon(org.naru.park.ParkModel.Beacon value) {
        if (beaconBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          beacon_ = value;
          onChanged();
        } else {
          beaconBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public Builder setBeacon(
          org.naru.park.ParkModel.Beacon.Builder builderForValue) {
        if (beaconBuilder_ == null) {
          beacon_ = builderForValue.build();
          onChanged();
        } else {
          beaconBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public Builder mergeBeacon(org.naru.park.ParkModel.Beacon value) {
        if (beaconBuilder_ == null) {
          if (beacon_ != null) {
            beacon_ =
              org.naru.park.ParkModel.Beacon.newBuilder(beacon_).mergeFrom(value).buildPartial();
          } else {
            beacon_ = value;
          }
          onChanged();
        } else {
          beaconBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public Builder clearBeacon() {
        if (beaconBuilder_ == null) {
          beacon_ = null;
          onChanged();
        } else {
          beacon_ = null;
          beaconBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public org.naru.park.ParkModel.Beacon.Builder getBeaconBuilder() {
        
        onChanged();
        return getBeaconFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      public org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder() {
        if (beaconBuilder_ != null) {
          return beaconBuilder_.getMessageOrBuilder();
        } else {
          return beacon_ == null ?
              org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
        }
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> 
          getBeaconFieldBuilder() {
        if (beaconBuilder_ == null) {
          beaconBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder>(
                  getBeacon(),
                  getParentForChildren(),
                  isClean());
          beacon_ = null;
        }
        return beaconBuilder_;
      }

      private long issueDate_ ;
      /**
       * <code>int64 issue_date = 4;</code>
       */
      public long getIssueDate() {
        return issueDate_;
      }
      /**
       * <code>int64 issue_date = 4;</code>
       */
      public Builder setIssueDate(long value) {
        
        issueDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 issue_date = 4;</code>
       */
      public Builder clearIssueDate() {
        
        issueDate_ = 0L;
        onChanged();
        return this;
      }

      private long expirationDate_ ;
      /**
       * <code>int64 expiration_date = 5;</code>
       */
      public long getExpirationDate() {
        return expirationDate_;
      }
      /**
       * <code>int64 expiration_date = 5;</code>
       */
      public Builder setExpirationDate(long value) {
        
        expirationDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 expiration_date = 5;</code>
       */
      public Builder clearExpirationDate() {
        
        expirationDate_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object display_ = "";
      /**
       * <code>string display = 6;</code>
       */
      public java.lang.String getDisplay() {
        java.lang.Object ref = display_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          display_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string display = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDisplayBytes() {
        java.lang.Object ref = display_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          display_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string display = 6;</code>
       */
      public Builder setDisplay(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        display_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string display = 6;</code>
       */
      public Builder clearDisplay() {
        
        display_ = getDefaultInstance().getDisplay();
        onChanged();
        return this;
      }
      /**
       * <code>string display = 6;</code>
       */
      public Builder setDisplayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        display_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.UserTicket)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.UserTicket)
    private static final org.naru.park.ParkModel.UserTicket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.UserTicket();
    }

    public static org.naru.park.ParkModel.UserTicket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserTicket>
        PARSER = new com.google.protobuf.AbstractParser<UserTicket>() {
      public UserTicket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserTicket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserTicket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserTicket> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.UserTicket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.Sensor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>string device_name = 2;</code>
     */
    java.lang.String getDeviceName();
    /**
     * <code>string device_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceNameBytes();

    /**
     * <code>string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * Protobuf type {@code org.naru.park.Sensor}
   */
  public  static final class Sensor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.Sensor)
      SensorOrBuilder {
    // Use Sensor.newBuilder() to construct.
    private Sensor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sensor() {
      id_ = "";
      deviceName_ = "";
      description_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Sensor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              deviceName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_Sensor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_Sensor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.Sensor.class, org.naru.park.ParkModel.Sensor.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object deviceName_;
    /**
     * <code>string device_name = 2;</code>
     */
    public java.lang.String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceName_ = s;
        return s;
      }
    }
    /**
     * <code>string device_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private volatile java.lang.Object description_;
    /**
     * <code>string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <code>string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceName_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceName_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.Sensor)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.Sensor other = (org.naru.park.ParkModel.Sensor) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getDeviceName()
          .equals(other.getDeviceName());
      result = result && getDescription()
          .equals(other.getDescription());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + DEVICE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.Sensor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Sensor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Sensor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.Sensor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.Sensor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.Sensor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.Sensor)
        org.naru.park.ParkModel.SensorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Sensor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Sensor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.Sensor.class, org.naru.park.ParkModel.Sensor.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.Sensor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        deviceName_ = "";

        description_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_Sensor_descriptor;
      }

      public org.naru.park.ParkModel.Sensor getDefaultInstanceForType() {
        return org.naru.park.ParkModel.Sensor.getDefaultInstance();
      }

      public org.naru.park.ParkModel.Sensor build() {
        org.naru.park.ParkModel.Sensor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.Sensor buildPartial() {
        org.naru.park.ParkModel.Sensor result = new org.naru.park.ParkModel.Sensor(this);
        result.id_ = id_;
        result.deviceName_ = deviceName_;
        result.description_ = description_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.Sensor) {
          return mergeFrom((org.naru.park.ParkModel.Sensor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.Sensor other) {
        if (other == org.naru.park.ParkModel.Sensor.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getDeviceName().isEmpty()) {
          deviceName_ = other.deviceName_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.Sensor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.Sensor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object deviceName_ = "";
      /**
       * <code>string device_name = 2;</code>
       */
      public java.lang.String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string device_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string device_name = 2;</code>
       */
      public Builder setDeviceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string device_name = 2;</code>
       */
      public Builder clearDeviceName() {
        
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      /**
       * <code>string device_name = 2;</code>
       */
      public Builder setDeviceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <code>string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string description = 3;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.Sensor)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.Sensor)
    private static final org.naru.park.ParkModel.Sensor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.Sensor();
    }

    public static org.naru.park.ParkModel.Sensor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Sensor>
        PARSER = new com.google.protobuf.AbstractParser<Sensor>() {
      public Sensor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sensor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sensor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sensor> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.Sensor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.SensorReport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    java.util.List<org.naru.park.ParkModel.RecordedUserTicket> 
        getBeaconsList();
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    org.naru.park.ParkModel.RecordedUserTicket getBeacons(int index);
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    int getBeaconsCount();
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    java.util.List<? extends org.naru.park.ParkModel.RecordedUserTicketOrBuilder> 
        getBeaconsOrBuilderList();
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    org.naru.park.ParkModel.RecordedUserTicketOrBuilder getBeaconsOrBuilder(
        int index);

    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    boolean hasSensor();
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    org.naru.park.ParkModel.Sensor getSensor();
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder();

    /**
     * <code>double lat = 4;</code>
     */
    double getLat();

    /**
     * <code>double long = 5;</code>
     */
    double getLong();

    /**
     * <code>string connected_wifi = 6;</code>
     */
    java.lang.String getConnectedWifi();
    /**
     * <code>string connected_wifi = 6;</code>
     */
    com.google.protobuf.ByteString
        getConnectedWifiBytes();

    /**
     * <code>int32 connected_wifi_rssi = 7;</code>
     */
    int getConnectedWifiRssi();

    /**
     * <code>int64 recorded_date = 8;</code>
     */
    long getRecordedDate();
  }
  /**
   * Protobuf type {@code org.naru.park.SensorReport}
   */
  public  static final class SensorReport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.SensorReport)
      SensorReportOrBuilder {
    // Use SensorReport.newBuilder() to construct.
    private SensorReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorReport() {
      id_ = "";
      beacons_ = java.util.Collections.emptyList();
      lat_ = 0D;
      long_ = 0D;
      connectedWifi_ = "";
      connectedWifiRssi_ = 0;
      recordedDate_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SensorReport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                beacons_ = new java.util.ArrayList<org.naru.park.ParkModel.RecordedUserTicket>();
                mutable_bitField0_ |= 0x00000002;
              }
              beacons_.add(
                  input.readMessage(org.naru.park.ParkModel.RecordedUserTicket.parser(), extensionRegistry));
              break;
            }
            case 26: {
              org.naru.park.ParkModel.Sensor.Builder subBuilder = null;
              if (sensor_ != null) {
                subBuilder = sensor_.toBuilder();
              }
              sensor_ = input.readMessage(org.naru.park.ParkModel.Sensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensor_);
                sensor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 33: {

              lat_ = input.readDouble();
              break;
            }
            case 41: {

              long_ = input.readDouble();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              connectedWifi_ = s;
              break;
            }
            case 56: {

              connectedWifiRssi_ = input.readInt32();
              break;
            }
            case 64: {

              recordedDate_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          beacons_ = java.util.Collections.unmodifiableList(beacons_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_SensorReport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_SensorReport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.SensorReport.class, org.naru.park.ParkModel.SensorReport.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEACONS_FIELD_NUMBER = 2;
    private java.util.List<org.naru.park.ParkModel.RecordedUserTicket> beacons_;
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    public java.util.List<org.naru.park.ParkModel.RecordedUserTicket> getBeaconsList() {
      return beacons_;
    }
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    public java.util.List<? extends org.naru.park.ParkModel.RecordedUserTicketOrBuilder> 
        getBeaconsOrBuilderList() {
      return beacons_;
    }
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    public int getBeaconsCount() {
      return beacons_.size();
    }
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    public org.naru.park.ParkModel.RecordedUserTicket getBeacons(int index) {
      return beacons_.get(index);
    }
    /**
     * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
     */
    public org.naru.park.ParkModel.RecordedUserTicketOrBuilder getBeaconsOrBuilder(
        int index) {
      return beacons_.get(index);
    }

    public static final int SENSOR_FIELD_NUMBER = 3;
    private org.naru.park.ParkModel.Sensor sensor_;
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public boolean hasSensor() {
      return sensor_ != null;
    }
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public org.naru.park.ParkModel.Sensor getSensor() {
      return sensor_ == null ? org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
    }
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder() {
      return getSensor();
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <code>double lat = 4;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int LONG_FIELD_NUMBER = 5;
    private double long_;
    /**
     * <code>double long = 5;</code>
     */
    public double getLong() {
      return long_;
    }

    public static final int CONNECTED_WIFI_FIELD_NUMBER = 6;
    private volatile java.lang.Object connectedWifi_;
    /**
     * <code>string connected_wifi = 6;</code>
     */
    public java.lang.String getConnectedWifi() {
      java.lang.Object ref = connectedWifi_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectedWifi_ = s;
        return s;
      }
    }
    /**
     * <code>string connected_wifi = 6;</code>
     */
    public com.google.protobuf.ByteString
        getConnectedWifiBytes() {
      java.lang.Object ref = connectedWifi_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectedWifi_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONNECTED_WIFI_RSSI_FIELD_NUMBER = 7;
    private int connectedWifiRssi_;
    /**
     * <code>int32 connected_wifi_rssi = 7;</code>
     */
    public int getConnectedWifiRssi() {
      return connectedWifiRssi_;
    }

    public static final int RECORDED_DATE_FIELD_NUMBER = 8;
    private long recordedDate_;
    /**
     * <code>int64 recorded_date = 8;</code>
     */
    public long getRecordedDate() {
      return recordedDate_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      for (int i = 0; i < beacons_.size(); i++) {
        output.writeMessage(2, beacons_.get(i));
      }
      if (sensor_ != null) {
        output.writeMessage(3, getSensor());
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (long_ != 0D) {
        output.writeDouble(5, long_);
      }
      if (!getConnectedWifiBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, connectedWifi_);
      }
      if (connectedWifiRssi_ != 0) {
        output.writeInt32(7, connectedWifiRssi_);
      }
      if (recordedDate_ != 0L) {
        output.writeInt64(8, recordedDate_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      for (int i = 0; i < beacons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, beacons_.get(i));
      }
      if (sensor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSensor());
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (long_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, long_);
      }
      if (!getConnectedWifiBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, connectedWifi_);
      }
      if (connectedWifiRssi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, connectedWifiRssi_);
      }
      if (recordedDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, recordedDate_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.SensorReport)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.SensorReport other = (org.naru.park.ParkModel.SensorReport) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getBeaconsList()
          .equals(other.getBeaconsList());
      result = result && (hasSensor() == other.hasSensor());
      if (hasSensor()) {
        result = result && getSensor()
            .equals(other.getSensor());
      }
      result = result && (
          java.lang.Double.doubleToLongBits(getLat())
          == java.lang.Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLong())
          == java.lang.Double.doubleToLongBits(
              other.getLong()));
      result = result && getConnectedWifi()
          .equals(other.getConnectedWifi());
      result = result && (getConnectedWifiRssi()
          == other.getConnectedWifiRssi());
      result = result && (getRecordedDate()
          == other.getRecordedDate());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getBeaconsCount() > 0) {
        hash = (37 * hash) + BEACONS_FIELD_NUMBER;
        hash = (53 * hash) + getBeaconsList().hashCode();
      }
      if (hasSensor()) {
        hash = (37 * hash) + SENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSensor().hashCode();
      }
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + LONG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLong()));
      hash = (37 * hash) + CONNECTED_WIFI_FIELD_NUMBER;
      hash = (53 * hash) + getConnectedWifi().hashCode();
      hash = (37 * hash) + CONNECTED_WIFI_RSSI_FIELD_NUMBER;
      hash = (53 * hash) + getConnectedWifiRssi();
      hash = (37 * hash) + RECORDED_DATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRecordedDate());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.SensorReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.SensorReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.SensorReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.SensorReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.SensorReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.SensorReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.SensorReport)
        org.naru.park.ParkModel.SensorReportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_SensorReport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_SensorReport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.SensorReport.class, org.naru.park.ParkModel.SensorReport.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.SensorReport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBeaconsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        if (beaconsBuilder_ == null) {
          beacons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          beaconsBuilder_.clear();
        }
        if (sensorBuilder_ == null) {
          sensor_ = null;
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }
        lat_ = 0D;

        long_ = 0D;

        connectedWifi_ = "";

        connectedWifiRssi_ = 0;

        recordedDate_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_SensorReport_descriptor;
      }

      public org.naru.park.ParkModel.SensorReport getDefaultInstanceForType() {
        return org.naru.park.ParkModel.SensorReport.getDefaultInstance();
      }

      public org.naru.park.ParkModel.SensorReport build() {
        org.naru.park.ParkModel.SensorReport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.SensorReport buildPartial() {
        org.naru.park.ParkModel.SensorReport result = new org.naru.park.ParkModel.SensorReport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (beaconsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            beacons_ = java.util.Collections.unmodifiableList(beacons_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.beacons_ = beacons_;
        } else {
          result.beacons_ = beaconsBuilder_.build();
        }
        if (sensorBuilder_ == null) {
          result.sensor_ = sensor_;
        } else {
          result.sensor_ = sensorBuilder_.build();
        }
        result.lat_ = lat_;
        result.long_ = long_;
        result.connectedWifi_ = connectedWifi_;
        result.connectedWifiRssi_ = connectedWifiRssi_;
        result.recordedDate_ = recordedDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.SensorReport) {
          return mergeFrom((org.naru.park.ParkModel.SensorReport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.SensorReport other) {
        if (other == org.naru.park.ParkModel.SensorReport.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (beaconsBuilder_ == null) {
          if (!other.beacons_.isEmpty()) {
            if (beacons_.isEmpty()) {
              beacons_ = other.beacons_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBeaconsIsMutable();
              beacons_.addAll(other.beacons_);
            }
            onChanged();
          }
        } else {
          if (!other.beacons_.isEmpty()) {
            if (beaconsBuilder_.isEmpty()) {
              beaconsBuilder_.dispose();
              beaconsBuilder_ = null;
              beacons_ = other.beacons_;
              bitField0_ = (bitField0_ & ~0x00000002);
              beaconsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBeaconsFieldBuilder() : null;
            } else {
              beaconsBuilder_.addAllMessages(other.beacons_);
            }
          }
        }
        if (other.hasSensor()) {
          mergeSensor(other.getSensor());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getLong() != 0D) {
          setLong(other.getLong());
        }
        if (!other.getConnectedWifi().isEmpty()) {
          connectedWifi_ = other.connectedWifi_;
          onChanged();
        }
        if (other.getConnectedWifiRssi() != 0) {
          setConnectedWifiRssi(other.getConnectedWifiRssi());
        }
        if (other.getRecordedDate() != 0L) {
          setRecordedDate(other.getRecordedDate());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.SensorReport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.SensorReport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.naru.park.ParkModel.RecordedUserTicket> beacons_ =
        java.util.Collections.emptyList();
      private void ensureBeaconsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          beacons_ = new java.util.ArrayList<org.naru.park.ParkModel.RecordedUserTicket>(beacons_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.RecordedUserTicket, org.naru.park.ParkModel.RecordedUserTicket.Builder, org.naru.park.ParkModel.RecordedUserTicketOrBuilder> beaconsBuilder_;

      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public java.util.List<org.naru.park.ParkModel.RecordedUserTicket> getBeaconsList() {
        if (beaconsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beacons_);
        } else {
          return beaconsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public int getBeaconsCount() {
        if (beaconsBuilder_ == null) {
          return beacons_.size();
        } else {
          return beaconsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public org.naru.park.ParkModel.RecordedUserTicket getBeacons(int index) {
        if (beaconsBuilder_ == null) {
          return beacons_.get(index);
        } else {
          return beaconsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder setBeacons(
          int index, org.naru.park.ParkModel.RecordedUserTicket value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.set(index, value);
          onChanged();
        } else {
          beaconsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder setBeacons(
          int index, org.naru.park.ParkModel.RecordedUserTicket.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder addBeacons(org.naru.park.ParkModel.RecordedUserTicket value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.add(value);
          onChanged();
        } else {
          beaconsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder addBeacons(
          int index, org.naru.park.ParkModel.RecordedUserTicket value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.add(index, value);
          onChanged();
        } else {
          beaconsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder addBeacons(
          org.naru.park.ParkModel.RecordedUserTicket.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.add(builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder addBeacons(
          int index, org.naru.park.ParkModel.RecordedUserTicket.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder addAllBeacons(
          java.lang.Iterable<? extends org.naru.park.ParkModel.RecordedUserTicket> values) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beacons_);
          onChanged();
        } else {
          beaconsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder clearBeacons() {
        if (beaconsBuilder_ == null) {
          beacons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          beaconsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public Builder removeBeacons(int index) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.remove(index);
          onChanged();
        } else {
          beaconsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public org.naru.park.ParkModel.RecordedUserTicket.Builder getBeaconsBuilder(
          int index) {
        return getBeaconsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public org.naru.park.ParkModel.RecordedUserTicketOrBuilder getBeaconsOrBuilder(
          int index) {
        if (beaconsBuilder_ == null) {
          return beacons_.get(index);  } else {
          return beaconsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public java.util.List<? extends org.naru.park.ParkModel.RecordedUserTicketOrBuilder> 
           getBeaconsOrBuilderList() {
        if (beaconsBuilder_ != null) {
          return beaconsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beacons_);
        }
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public org.naru.park.ParkModel.RecordedUserTicket.Builder addBeaconsBuilder() {
        return getBeaconsFieldBuilder().addBuilder(
            org.naru.park.ParkModel.RecordedUserTicket.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public org.naru.park.ParkModel.RecordedUserTicket.Builder addBeaconsBuilder(
          int index) {
        return getBeaconsFieldBuilder().addBuilder(
            index, org.naru.park.ParkModel.RecordedUserTicket.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.RecordedUserTicket beacons = 2;</code>
       */
      public java.util.List<org.naru.park.ParkModel.RecordedUserTicket.Builder> 
           getBeaconsBuilderList() {
        return getBeaconsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.RecordedUserTicket, org.naru.park.ParkModel.RecordedUserTicket.Builder, org.naru.park.ParkModel.RecordedUserTicketOrBuilder> 
          getBeaconsFieldBuilder() {
        if (beaconsBuilder_ == null) {
          beaconsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.naru.park.ParkModel.RecordedUserTicket, org.naru.park.ParkModel.RecordedUserTicket.Builder, org.naru.park.ParkModel.RecordedUserTicketOrBuilder>(
                  beacons_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          beacons_ = null;
        }
        return beaconsBuilder_;
      }

      private org.naru.park.ParkModel.Sensor sensor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> sensorBuilder_;
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public boolean hasSensor() {
        return sensorBuilder_ != null || sensor_ != null;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.Sensor getSensor() {
        if (sensorBuilder_ == null) {
          return sensor_ == null ? org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
        } else {
          return sensorBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder setSensor(org.naru.park.ParkModel.Sensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensor_ = value;
          onChanged();
        } else {
          sensorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder setSensor(
          org.naru.park.ParkModel.Sensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          sensor_ = builderForValue.build();
          onChanged();
        } else {
          sensorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder mergeSensor(org.naru.park.ParkModel.Sensor value) {
        if (sensorBuilder_ == null) {
          if (sensor_ != null) {
            sensor_ =
              org.naru.park.ParkModel.Sensor.newBuilder(sensor_).mergeFrom(value).buildPartial();
          } else {
            sensor_ = value;
          }
          onChanged();
        } else {
          sensorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder clearSensor() {
        if (sensorBuilder_ == null) {
          sensor_ = null;
          onChanged();
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.Sensor.Builder getSensorBuilder() {
        
        onChanged();
        return getSensorFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder() {
        if (sensorBuilder_ != null) {
          return sensorBuilder_.getMessageOrBuilder();
        } else {
          return sensor_ == null ?
              org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
        }
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> 
          getSensorFieldBuilder() {
        if (sensorBuilder_ == null) {
          sensorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder>(
                  getSensor(),
                  getParentForChildren(),
                  isClean());
          sensor_ = null;
        }
        return sensorBuilder_;
      }

      private double lat_ ;
      /**
       * <code>double lat = 4;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private double long_ ;
      /**
       * <code>double long = 5;</code>
       */
      public double getLong() {
        return long_;
      }
      /**
       * <code>double long = 5;</code>
       */
      public Builder setLong(double value) {
        
        long_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double long = 5;</code>
       */
      public Builder clearLong() {
        
        long_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object connectedWifi_ = "";
      /**
       * <code>string connected_wifi = 6;</code>
       */
      public java.lang.String getConnectedWifi() {
        java.lang.Object ref = connectedWifi_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          connectedWifi_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string connected_wifi = 6;</code>
       */
      public com.google.protobuf.ByteString
          getConnectedWifiBytes() {
        java.lang.Object ref = connectedWifi_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          connectedWifi_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string connected_wifi = 6;</code>
       */
      public Builder setConnectedWifi(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        connectedWifi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string connected_wifi = 6;</code>
       */
      public Builder clearConnectedWifi() {
        
        connectedWifi_ = getDefaultInstance().getConnectedWifi();
        onChanged();
        return this;
      }
      /**
       * <code>string connected_wifi = 6;</code>
       */
      public Builder setConnectedWifiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        connectedWifi_ = value;
        onChanged();
        return this;
      }

      private int connectedWifiRssi_ ;
      /**
       * <code>int32 connected_wifi_rssi = 7;</code>
       */
      public int getConnectedWifiRssi() {
        return connectedWifiRssi_;
      }
      /**
       * <code>int32 connected_wifi_rssi = 7;</code>
       */
      public Builder setConnectedWifiRssi(int value) {
        
        connectedWifiRssi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 connected_wifi_rssi = 7;</code>
       */
      public Builder clearConnectedWifiRssi() {
        
        connectedWifiRssi_ = 0;
        onChanged();
        return this;
      }

      private long recordedDate_ ;
      /**
       * <code>int64 recorded_date = 8;</code>
       */
      public long getRecordedDate() {
        return recordedDate_;
      }
      /**
       * <code>int64 recorded_date = 8;</code>
       */
      public Builder setRecordedDate(long value) {
        
        recordedDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 recorded_date = 8;</code>
       */
      public Builder clearRecordedDate() {
        
        recordedDate_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.SensorReport)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.SensorReport)
    private static final org.naru.park.ParkModel.SensorReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.SensorReport();
    }

    public static org.naru.park.ParkModel.SensorReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SensorReport>
        PARSER = new com.google.protobuf.AbstractParser<SensorReport>() {
      public SensorReport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorReport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorReport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorReport> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.SensorReport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UIParkRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.UIParkRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    boolean hasSensorReport();
    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    org.naru.park.ParkModel.SensorReport getSensorReport();
    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    org.naru.park.ParkModel.SensorReportOrBuilder getSensorReportOrBuilder();

    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    boolean hasSensor();
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    org.naru.park.ParkModel.Sensor getSensor();
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder();

    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    boolean hasTicket();
    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    org.naru.park.ParkModel.UserTicket getTicket();
    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    org.naru.park.ParkModel.UserTicketOrBuilder getTicketOrBuilder();

    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    boolean hasBeacon();
    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    org.naru.park.ParkModel.Beacon getBeacon();
    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder();

    /**
     * <code>int64 start_time = 6;</code>
     */
    long getStartTime();

    /**
     * <code>int64 end_time = 7;</code>
     */
    long getEndTime();
  }
  /**
   * Protobuf type {@code org.naru.park.UIParkRequest}
   */
  public  static final class UIParkRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.UIParkRequest)
      UIParkRequestOrBuilder {
    // Use UIParkRequest.newBuilder() to construct.
    private UIParkRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UIParkRequest() {
      token_ = "";
      startTime_ = 0L;
      endTime_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UIParkRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 18: {
              org.naru.park.ParkModel.SensorReport.Builder subBuilder = null;
              if (sensorReport_ != null) {
                subBuilder = sensorReport_.toBuilder();
              }
              sensorReport_ = input.readMessage(org.naru.park.ParkModel.SensorReport.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensorReport_);
                sensorReport_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.naru.park.ParkModel.Sensor.Builder subBuilder = null;
              if (sensor_ != null) {
                subBuilder = sensor_.toBuilder();
              }
              sensor_ = input.readMessage(org.naru.park.ParkModel.Sensor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sensor_);
                sensor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.naru.park.ParkModel.UserTicket.Builder subBuilder = null;
              if (ticket_ != null) {
                subBuilder = ticket_.toBuilder();
              }
              ticket_ = input.readMessage(org.naru.park.ParkModel.UserTicket.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ticket_);
                ticket_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              org.naru.park.ParkModel.Beacon.Builder subBuilder = null;
              if (beacon_ != null) {
                subBuilder = beacon_.toBuilder();
              }
              beacon_ = input.readMessage(org.naru.park.ParkModel.Beacon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(beacon_);
                beacon_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              startTime_ = input.readInt64();
              break;
            }
            case 56: {

              endTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.UIParkRequest.class, org.naru.park.ParkModel.UIParkRequest.Builder.class);
    }

    public static final int TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object token_;
    /**
     * <code>string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <code>string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSOR_REPORT_FIELD_NUMBER = 2;
    private org.naru.park.ParkModel.SensorReport sensorReport_;
    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    public boolean hasSensorReport() {
      return sensorReport_ != null;
    }
    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    public org.naru.park.ParkModel.SensorReport getSensorReport() {
      return sensorReport_ == null ? org.naru.park.ParkModel.SensorReport.getDefaultInstance() : sensorReport_;
    }
    /**
     * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
     */
    public org.naru.park.ParkModel.SensorReportOrBuilder getSensorReportOrBuilder() {
      return getSensorReport();
    }

    public static final int SENSOR_FIELD_NUMBER = 3;
    private org.naru.park.ParkModel.Sensor sensor_;
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public boolean hasSensor() {
      return sensor_ != null;
    }
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public org.naru.park.ParkModel.Sensor getSensor() {
      return sensor_ == null ? org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
    }
    /**
     * <code>.org.naru.park.Sensor sensor = 3;</code>
     */
    public org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder() {
      return getSensor();
    }

    public static final int TICKET_FIELD_NUMBER = 4;
    private org.naru.park.ParkModel.UserTicket ticket_;
    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    public boolean hasTicket() {
      return ticket_ != null;
    }
    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    public org.naru.park.ParkModel.UserTicket getTicket() {
      return ticket_ == null ? org.naru.park.ParkModel.UserTicket.getDefaultInstance() : ticket_;
    }
    /**
     * <code>.org.naru.park.UserTicket ticket = 4;</code>
     */
    public org.naru.park.ParkModel.UserTicketOrBuilder getTicketOrBuilder() {
      return getTicket();
    }

    public static final int BEACON_FIELD_NUMBER = 5;
    private org.naru.park.ParkModel.Beacon beacon_;
    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    public boolean hasBeacon() {
      return beacon_ != null;
    }
    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    public org.naru.park.ParkModel.Beacon getBeacon() {
      return beacon_ == null ? org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
    }
    /**
     * <code>.org.naru.park.Beacon beacon = 5;</code>
     */
    public org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder() {
      return getBeacon();
    }

    public static final int START_TIME_FIELD_NUMBER = 6;
    private long startTime_;
    /**
     * <code>int64 start_time = 6;</code>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 7;
    private long endTime_;
    /**
     * <code>int64 end_time = 7;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
      }
      if (sensorReport_ != null) {
        output.writeMessage(2, getSensorReport());
      }
      if (sensor_ != null) {
        output.writeMessage(3, getSensor());
      }
      if (ticket_ != null) {
        output.writeMessage(4, getTicket());
      }
      if (beacon_ != null) {
        output.writeMessage(5, getBeacon());
      }
      if (startTime_ != 0L) {
        output.writeInt64(6, startTime_);
      }
      if (endTime_ != 0L) {
        output.writeInt64(7, endTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
      }
      if (sensorReport_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSensorReport());
      }
      if (sensor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSensor());
      }
      if (ticket_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTicket());
      }
      if (beacon_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBeacon());
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, startTime_);
      }
      if (endTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, endTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.UIParkRequest)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.UIParkRequest other = (org.naru.park.ParkModel.UIParkRequest) obj;

      boolean result = true;
      result = result && getToken()
          .equals(other.getToken());
      result = result && (hasSensorReport() == other.hasSensorReport());
      if (hasSensorReport()) {
        result = result && getSensorReport()
            .equals(other.getSensorReport());
      }
      result = result && (hasSensor() == other.hasSensor());
      if (hasSensor()) {
        result = result && getSensor()
            .equals(other.getSensor());
      }
      result = result && (hasTicket() == other.hasTicket());
      if (hasTicket()) {
        result = result && getTicket()
            .equals(other.getTicket());
      }
      result = result && (hasBeacon() == other.hasBeacon());
      if (hasBeacon()) {
        result = result && getBeacon()
            .equals(other.getBeacon());
      }
      result = result && (getStartTime()
          == other.getStartTime());
      result = result && (getEndTime()
          == other.getEndTime());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (hasSensorReport()) {
        hash = (37 * hash) + SENSOR_REPORT_FIELD_NUMBER;
        hash = (53 * hash) + getSensorReport().hashCode();
      }
      if (hasSensor()) {
        hash = (37 * hash) + SENSOR_FIELD_NUMBER;
        hash = (53 * hash) + getSensor().hashCode();
      }
      if (hasTicket()) {
        hash = (37 * hash) + TICKET_FIELD_NUMBER;
        hash = (53 * hash) + getTicket().hashCode();
      }
      if (hasBeacon()) {
        hash = (37 * hash) + BEACON_FIELD_NUMBER;
        hash = (53 * hash) + getBeacon().hashCode();
      }
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTime());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.UIParkRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.UIParkRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.UIParkRequest)
        org.naru.park.ParkModel.UIParkRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.UIParkRequest.class, org.naru.park.ParkModel.UIParkRequest.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.UIParkRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        token_ = "";

        if (sensorReportBuilder_ == null) {
          sensorReport_ = null;
        } else {
          sensorReport_ = null;
          sensorReportBuilder_ = null;
        }
        if (sensorBuilder_ == null) {
          sensor_ = null;
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }
        if (ticketBuilder_ == null) {
          ticket_ = null;
        } else {
          ticket_ = null;
          ticketBuilder_ = null;
        }
        if (beaconBuilder_ == null) {
          beacon_ = null;
        } else {
          beacon_ = null;
          beaconBuilder_ = null;
        }
        startTime_ = 0L;

        endTime_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkRequest_descriptor;
      }

      public org.naru.park.ParkModel.UIParkRequest getDefaultInstanceForType() {
        return org.naru.park.ParkModel.UIParkRequest.getDefaultInstance();
      }

      public org.naru.park.ParkModel.UIParkRequest build() {
        org.naru.park.ParkModel.UIParkRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.UIParkRequest buildPartial() {
        org.naru.park.ParkModel.UIParkRequest result = new org.naru.park.ParkModel.UIParkRequest(this);
        result.token_ = token_;
        if (sensorReportBuilder_ == null) {
          result.sensorReport_ = sensorReport_;
        } else {
          result.sensorReport_ = sensorReportBuilder_.build();
        }
        if (sensorBuilder_ == null) {
          result.sensor_ = sensor_;
        } else {
          result.sensor_ = sensorBuilder_.build();
        }
        if (ticketBuilder_ == null) {
          result.ticket_ = ticket_;
        } else {
          result.ticket_ = ticketBuilder_.build();
        }
        if (beaconBuilder_ == null) {
          result.beacon_ = beacon_;
        } else {
          result.beacon_ = beaconBuilder_.build();
        }
        result.startTime_ = startTime_;
        result.endTime_ = endTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.UIParkRequest) {
          return mergeFrom((org.naru.park.ParkModel.UIParkRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.UIParkRequest other) {
        if (other == org.naru.park.ParkModel.UIParkRequest.getDefaultInstance()) return this;
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (other.hasSensorReport()) {
          mergeSensorReport(other.getSensorReport());
        }
        if (other.hasSensor()) {
          mergeSensor(other.getSensor());
        }
        if (other.hasTicket()) {
          mergeTicket(other.getTicket());
        }
        if (other.hasBeacon()) {
          mergeBeacon(other.getBeacon());
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        if (other.getEndTime() != 0L) {
          setEndTime(other.getEndTime());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.UIParkRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.UIParkRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object token_ = "";
      /**
       * <code>string token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private org.naru.park.ParkModel.SensorReport sensorReport_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder> sensorReportBuilder_;
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public boolean hasSensorReport() {
        return sensorReportBuilder_ != null || sensorReport_ != null;
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport getSensorReport() {
        if (sensorReportBuilder_ == null) {
          return sensorReport_ == null ? org.naru.park.ParkModel.SensorReport.getDefaultInstance() : sensorReport_;
        } else {
          return sensorReportBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public Builder setSensorReport(org.naru.park.ParkModel.SensorReport value) {
        if (sensorReportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensorReport_ = value;
          onChanged();
        } else {
          sensorReportBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public Builder setSensorReport(
          org.naru.park.ParkModel.SensorReport.Builder builderForValue) {
        if (sensorReportBuilder_ == null) {
          sensorReport_ = builderForValue.build();
          onChanged();
        } else {
          sensorReportBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public Builder mergeSensorReport(org.naru.park.ParkModel.SensorReport value) {
        if (sensorReportBuilder_ == null) {
          if (sensorReport_ != null) {
            sensorReport_ =
              org.naru.park.ParkModel.SensorReport.newBuilder(sensorReport_).mergeFrom(value).buildPartial();
          } else {
            sensorReport_ = value;
          }
          onChanged();
        } else {
          sensorReportBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public Builder clearSensorReport() {
        if (sensorReportBuilder_ == null) {
          sensorReport_ = null;
          onChanged();
        } else {
          sensorReport_ = null;
          sensorReportBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport.Builder getSensorReportBuilder() {
        
        onChanged();
        return getSensorReportFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReportOrBuilder getSensorReportOrBuilder() {
        if (sensorReportBuilder_ != null) {
          return sensorReportBuilder_.getMessageOrBuilder();
        } else {
          return sensorReport_ == null ?
              org.naru.park.ParkModel.SensorReport.getDefaultInstance() : sensorReport_;
        }
      }
      /**
       * <code>.org.naru.park.SensorReport sensor_report = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder> 
          getSensorReportFieldBuilder() {
        if (sensorReportBuilder_ == null) {
          sensorReportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder>(
                  getSensorReport(),
                  getParentForChildren(),
                  isClean());
          sensorReport_ = null;
        }
        return sensorReportBuilder_;
      }

      private org.naru.park.ParkModel.Sensor sensor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> sensorBuilder_;
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public boolean hasSensor() {
        return sensorBuilder_ != null || sensor_ != null;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.Sensor getSensor() {
        if (sensorBuilder_ == null) {
          return sensor_ == null ? org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
        } else {
          return sensorBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder setSensor(org.naru.park.ParkModel.Sensor value) {
        if (sensorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sensor_ = value;
          onChanged();
        } else {
          sensorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder setSensor(
          org.naru.park.ParkModel.Sensor.Builder builderForValue) {
        if (sensorBuilder_ == null) {
          sensor_ = builderForValue.build();
          onChanged();
        } else {
          sensorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder mergeSensor(org.naru.park.ParkModel.Sensor value) {
        if (sensorBuilder_ == null) {
          if (sensor_ != null) {
            sensor_ =
              org.naru.park.ParkModel.Sensor.newBuilder(sensor_).mergeFrom(value).buildPartial();
          } else {
            sensor_ = value;
          }
          onChanged();
        } else {
          sensorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public Builder clearSensor() {
        if (sensorBuilder_ == null) {
          sensor_ = null;
          onChanged();
        } else {
          sensor_ = null;
          sensorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.Sensor.Builder getSensorBuilder() {
        
        onChanged();
        return getSensorFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      public org.naru.park.ParkModel.SensorOrBuilder getSensorOrBuilder() {
        if (sensorBuilder_ != null) {
          return sensorBuilder_.getMessageOrBuilder();
        } else {
          return sensor_ == null ?
              org.naru.park.ParkModel.Sensor.getDefaultInstance() : sensor_;
        }
      }
      /**
       * <code>.org.naru.park.Sensor sensor = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> 
          getSensorFieldBuilder() {
        if (sensorBuilder_ == null) {
          sensorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder>(
                  getSensor(),
                  getParentForChildren(),
                  isClean());
          sensor_ = null;
        }
        return sensorBuilder_;
      }

      private org.naru.park.ParkModel.UserTicket ticket_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder> ticketBuilder_;
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public boolean hasTicket() {
        return ticketBuilder_ != null || ticket_ != null;
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public org.naru.park.ParkModel.UserTicket getTicket() {
        if (ticketBuilder_ == null) {
          return ticket_ == null ? org.naru.park.ParkModel.UserTicket.getDefaultInstance() : ticket_;
        } else {
          return ticketBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public Builder setTicket(org.naru.park.ParkModel.UserTicket value) {
        if (ticketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ticket_ = value;
          onChanged();
        } else {
          ticketBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public Builder setTicket(
          org.naru.park.ParkModel.UserTicket.Builder builderForValue) {
        if (ticketBuilder_ == null) {
          ticket_ = builderForValue.build();
          onChanged();
        } else {
          ticketBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public Builder mergeTicket(org.naru.park.ParkModel.UserTicket value) {
        if (ticketBuilder_ == null) {
          if (ticket_ != null) {
            ticket_ =
              org.naru.park.ParkModel.UserTicket.newBuilder(ticket_).mergeFrom(value).buildPartial();
          } else {
            ticket_ = value;
          }
          onChanged();
        } else {
          ticketBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public Builder clearTicket() {
        if (ticketBuilder_ == null) {
          ticket_ = null;
          onChanged();
        } else {
          ticket_ = null;
          ticketBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public org.naru.park.ParkModel.UserTicket.Builder getTicketBuilder() {
        
        onChanged();
        return getTicketFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      public org.naru.park.ParkModel.UserTicketOrBuilder getTicketOrBuilder() {
        if (ticketBuilder_ != null) {
          return ticketBuilder_.getMessageOrBuilder();
        } else {
          return ticket_ == null ?
              org.naru.park.ParkModel.UserTicket.getDefaultInstance() : ticket_;
        }
      }
      /**
       * <code>.org.naru.park.UserTicket ticket = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder> 
          getTicketFieldBuilder() {
        if (ticketBuilder_ == null) {
          ticketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder>(
                  getTicket(),
                  getParentForChildren(),
                  isClean());
          ticket_ = null;
        }
        return ticketBuilder_;
      }

      private org.naru.park.ParkModel.Beacon beacon_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> beaconBuilder_;
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public boolean hasBeacon() {
        return beaconBuilder_ != null || beacon_ != null;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public org.naru.park.ParkModel.Beacon getBeacon() {
        if (beaconBuilder_ == null) {
          return beacon_ == null ? org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
        } else {
          return beaconBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public Builder setBeacon(org.naru.park.ParkModel.Beacon value) {
        if (beaconBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          beacon_ = value;
          onChanged();
        } else {
          beaconBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public Builder setBeacon(
          org.naru.park.ParkModel.Beacon.Builder builderForValue) {
        if (beaconBuilder_ == null) {
          beacon_ = builderForValue.build();
          onChanged();
        } else {
          beaconBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public Builder mergeBeacon(org.naru.park.ParkModel.Beacon value) {
        if (beaconBuilder_ == null) {
          if (beacon_ != null) {
            beacon_ =
              org.naru.park.ParkModel.Beacon.newBuilder(beacon_).mergeFrom(value).buildPartial();
          } else {
            beacon_ = value;
          }
          onChanged();
        } else {
          beaconBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public Builder clearBeacon() {
        if (beaconBuilder_ == null) {
          beacon_ = null;
          onChanged();
        } else {
          beacon_ = null;
          beaconBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public org.naru.park.ParkModel.Beacon.Builder getBeaconBuilder() {
        
        onChanged();
        return getBeaconFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      public org.naru.park.ParkModel.BeaconOrBuilder getBeaconOrBuilder() {
        if (beaconBuilder_ != null) {
          return beaconBuilder_.getMessageOrBuilder();
        } else {
          return beacon_ == null ?
              org.naru.park.ParkModel.Beacon.getDefaultInstance() : beacon_;
        }
      }
      /**
       * <code>.org.naru.park.Beacon beacon = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> 
          getBeaconFieldBuilder() {
        if (beaconBuilder_ == null) {
          beaconBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder>(
                  getBeacon(),
                  getParentForChildren(),
                  isClean());
          beacon_ = null;
        }
        return beaconBuilder_;
      }

      private long startTime_ ;
      /**
       * <code>int64 start_time = 6;</code>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>int64 start_time = 6;</code>
       */
      public Builder setStartTime(long value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 start_time = 6;</code>
       */
      public Builder clearStartTime() {
        
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>int64 end_time = 7;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>int64 end_time = 7;</code>
       */
      public Builder setEndTime(long value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 end_time = 7;</code>
       */
      public Builder clearEndTime() {
        
        endTime_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.UIParkRequest)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.UIParkRequest)
    private static final org.naru.park.ParkModel.UIParkRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.UIParkRequest();
    }

    public static org.naru.park.ParkModel.UIParkRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UIParkRequest>
        PARSER = new com.google.protobuf.AbstractParser<UIParkRequest>() {
      public UIParkRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UIParkRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UIParkRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UIParkRequest> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.UIParkRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UIParkResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.naru.park.UIParkResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    java.util.List<org.naru.park.ParkModel.SensorReport> 
        getReportsList();
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    org.naru.park.ParkModel.SensorReport getReports(int index);
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    int getReportsCount();
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    java.util.List<? extends org.naru.park.ParkModel.SensorReportOrBuilder> 
        getReportsOrBuilderList();
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    org.naru.park.ParkModel.SensorReportOrBuilder getReportsOrBuilder(
        int index);

    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    java.util.List<org.naru.park.ParkModel.UserTicket> 
        getTicketsList();
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    org.naru.park.ParkModel.UserTicket getTickets(int index);
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    int getTicketsCount();
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    java.util.List<? extends org.naru.park.ParkModel.UserTicketOrBuilder> 
        getTicketsOrBuilderList();
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    org.naru.park.ParkModel.UserTicketOrBuilder getTicketsOrBuilder(
        int index);

    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    java.util.List<org.naru.park.ParkModel.Beacon> 
        getBeaconsList();
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    org.naru.park.ParkModel.Beacon getBeacons(int index);
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    int getBeaconsCount();
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    java.util.List<? extends org.naru.park.ParkModel.BeaconOrBuilder> 
        getBeaconsOrBuilderList();
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    org.naru.park.ParkModel.BeaconOrBuilder getBeaconsOrBuilder(
        int index);

    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    java.util.List<org.naru.park.ParkModel.Sensor> 
        getSensorsList();
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    org.naru.park.ParkModel.Sensor getSensors(int index);
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    int getSensorsCount();
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    java.util.List<? extends org.naru.park.ParkModel.SensorOrBuilder> 
        getSensorsOrBuilderList();
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    org.naru.park.ParkModel.SensorOrBuilder getSensorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.naru.park.UIParkResponse}
   */
  public  static final class UIParkResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.naru.park.UIParkResponse)
      UIParkResponseOrBuilder {
    // Use UIParkResponse.newBuilder() to construct.
    private UIParkResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UIParkResponse() {
      token_ = "";
      reports_ = java.util.Collections.emptyList();
      tickets_ = java.util.Collections.emptyList();
      beacons_ = java.util.Collections.emptyList();
      sensors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UIParkResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                reports_ = new java.util.ArrayList<org.naru.park.ParkModel.SensorReport>();
                mutable_bitField0_ |= 0x00000002;
              }
              reports_.add(
                  input.readMessage(org.naru.park.ParkModel.SensorReport.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tickets_ = new java.util.ArrayList<org.naru.park.ParkModel.UserTicket>();
                mutable_bitField0_ |= 0x00000004;
              }
              tickets_.add(
                  input.readMessage(org.naru.park.ParkModel.UserTicket.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                beacons_ = new java.util.ArrayList<org.naru.park.ParkModel.Beacon>();
                mutable_bitField0_ |= 0x00000008;
              }
              beacons_.add(
                  input.readMessage(org.naru.park.ParkModel.Beacon.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                sensors_ = new java.util.ArrayList<org.naru.park.ParkModel.Sensor>();
                mutable_bitField0_ |= 0x00000010;
              }
              sensors_.add(
                  input.readMessage(org.naru.park.ParkModel.Sensor.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          reports_ = java.util.Collections.unmodifiableList(reports_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tickets_ = java.util.Collections.unmodifiableList(tickets_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          beacons_ = java.util.Collections.unmodifiableList(beacons_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.naru.park.ParkModel.UIParkResponse.class, org.naru.park.ParkModel.UIParkResponse.Builder.class);
    }

    private int bitField0_;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object token_;
    /**
     * <code>string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <code>string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPORTS_FIELD_NUMBER = 2;
    private java.util.List<org.naru.park.ParkModel.SensorReport> reports_;
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    public java.util.List<org.naru.park.ParkModel.SensorReport> getReportsList() {
      return reports_;
    }
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    public java.util.List<? extends org.naru.park.ParkModel.SensorReportOrBuilder> 
        getReportsOrBuilderList() {
      return reports_;
    }
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    public int getReportsCount() {
      return reports_.size();
    }
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    public org.naru.park.ParkModel.SensorReport getReports(int index) {
      return reports_.get(index);
    }
    /**
     * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
     */
    public org.naru.park.ParkModel.SensorReportOrBuilder getReportsOrBuilder(
        int index) {
      return reports_.get(index);
    }

    public static final int TICKETS_FIELD_NUMBER = 3;
    private java.util.List<org.naru.park.ParkModel.UserTicket> tickets_;
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    public java.util.List<org.naru.park.ParkModel.UserTicket> getTicketsList() {
      return tickets_;
    }
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    public java.util.List<? extends org.naru.park.ParkModel.UserTicketOrBuilder> 
        getTicketsOrBuilderList() {
      return tickets_;
    }
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    public int getTicketsCount() {
      return tickets_.size();
    }
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    public org.naru.park.ParkModel.UserTicket getTickets(int index) {
      return tickets_.get(index);
    }
    /**
     * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
     */
    public org.naru.park.ParkModel.UserTicketOrBuilder getTicketsOrBuilder(
        int index) {
      return tickets_.get(index);
    }

    public static final int BEACONS_FIELD_NUMBER = 4;
    private java.util.List<org.naru.park.ParkModel.Beacon> beacons_;
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    public java.util.List<org.naru.park.ParkModel.Beacon> getBeaconsList() {
      return beacons_;
    }
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    public java.util.List<? extends org.naru.park.ParkModel.BeaconOrBuilder> 
        getBeaconsOrBuilderList() {
      return beacons_;
    }
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    public int getBeaconsCount() {
      return beacons_.size();
    }
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    public org.naru.park.ParkModel.Beacon getBeacons(int index) {
      return beacons_.get(index);
    }
    /**
     * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
     */
    public org.naru.park.ParkModel.BeaconOrBuilder getBeaconsOrBuilder(
        int index) {
      return beacons_.get(index);
    }

    public static final int SENSORS_FIELD_NUMBER = 5;
    private java.util.List<org.naru.park.ParkModel.Sensor> sensors_;
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    public java.util.List<org.naru.park.ParkModel.Sensor> getSensorsList() {
      return sensors_;
    }
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    public java.util.List<? extends org.naru.park.ParkModel.SensorOrBuilder> 
        getSensorsOrBuilderList() {
      return sensors_;
    }
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    public int getSensorsCount() {
      return sensors_.size();
    }
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    public org.naru.park.ParkModel.Sensor getSensors(int index) {
      return sensors_.get(index);
    }
    /**
     * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
     */
    public org.naru.park.ParkModel.SensorOrBuilder getSensorsOrBuilder(
        int index) {
      return sensors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
      }
      for (int i = 0; i < reports_.size(); i++) {
        output.writeMessage(2, reports_.get(i));
      }
      for (int i = 0; i < tickets_.size(); i++) {
        output.writeMessage(3, tickets_.get(i));
      }
      for (int i = 0; i < beacons_.size(); i++) {
        output.writeMessage(4, beacons_.get(i));
      }
      for (int i = 0; i < sensors_.size(); i++) {
        output.writeMessage(5, sensors_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
      }
      for (int i = 0; i < reports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, reports_.get(i));
      }
      for (int i = 0; i < tickets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tickets_.get(i));
      }
      for (int i = 0; i < beacons_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, beacons_.get(i));
      }
      for (int i = 0; i < sensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sensors_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.naru.park.ParkModel.UIParkResponse)) {
        return super.equals(obj);
      }
      org.naru.park.ParkModel.UIParkResponse other = (org.naru.park.ParkModel.UIParkResponse) obj;

      boolean result = true;
      result = result && getToken()
          .equals(other.getToken());
      result = result && getReportsList()
          .equals(other.getReportsList());
      result = result && getTicketsList()
          .equals(other.getTicketsList());
      result = result && getBeaconsList()
          .equals(other.getBeaconsList());
      result = result && getSensorsList()
          .equals(other.getSensorsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (getReportsCount() > 0) {
        hash = (37 * hash) + REPORTS_FIELD_NUMBER;
        hash = (53 * hash) + getReportsList().hashCode();
      }
      if (getTicketsCount() > 0) {
        hash = (37 * hash) + TICKETS_FIELD_NUMBER;
        hash = (53 * hash) + getTicketsList().hashCode();
      }
      if (getBeaconsCount() > 0) {
        hash = (37 * hash) + BEACONS_FIELD_NUMBER;
        hash = (53 * hash) + getBeaconsList().hashCode();
      }
      if (getSensorsCount() > 0) {
        hash = (37 * hash) + SENSORS_FIELD_NUMBER;
        hash = (53 * hash) + getSensorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.naru.park.ParkModel.UIParkResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.naru.park.ParkModel.UIParkResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.naru.park.UIParkResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.naru.park.UIParkResponse)
        org.naru.park.ParkModel.UIParkResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.naru.park.ParkModel.UIParkResponse.class, org.naru.park.ParkModel.UIParkResponse.Builder.class);
      }

      // Construct using org.naru.park.ParkModel.UIParkResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getReportsFieldBuilder();
          getTicketsFieldBuilder();
          getBeaconsFieldBuilder();
          getSensorsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        token_ = "";

        if (reportsBuilder_ == null) {
          reports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          reportsBuilder_.clear();
        }
        if (ticketsBuilder_ == null) {
          tickets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ticketsBuilder_.clear();
        }
        if (beaconsBuilder_ == null) {
          beacons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          beaconsBuilder_.clear();
        }
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.naru.park.ParkModel.internal_static_org_naru_park_UIParkResponse_descriptor;
      }

      public org.naru.park.ParkModel.UIParkResponse getDefaultInstanceForType() {
        return org.naru.park.ParkModel.UIParkResponse.getDefaultInstance();
      }

      public org.naru.park.ParkModel.UIParkResponse build() {
        org.naru.park.ParkModel.UIParkResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.naru.park.ParkModel.UIParkResponse buildPartial() {
        org.naru.park.ParkModel.UIParkResponse result = new org.naru.park.ParkModel.UIParkResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.token_ = token_;
        if (reportsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            reports_ = java.util.Collections.unmodifiableList(reports_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.reports_ = reports_;
        } else {
          result.reports_ = reportsBuilder_.build();
        }
        if (ticketsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            tickets_ = java.util.Collections.unmodifiableList(tickets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tickets_ = tickets_;
        } else {
          result.tickets_ = ticketsBuilder_.build();
        }
        if (beaconsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            beacons_ = java.util.Collections.unmodifiableList(beacons_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.beacons_ = beacons_;
        } else {
          result.beacons_ = beaconsBuilder_.build();
        }
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            sensors_ = java.util.Collections.unmodifiableList(sensors_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.naru.park.ParkModel.UIParkResponse) {
          return mergeFrom((org.naru.park.ParkModel.UIParkResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.naru.park.ParkModel.UIParkResponse other) {
        if (other == org.naru.park.ParkModel.UIParkResponse.getDefaultInstance()) return this;
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (reportsBuilder_ == null) {
          if (!other.reports_.isEmpty()) {
            if (reports_.isEmpty()) {
              reports_ = other.reports_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureReportsIsMutable();
              reports_.addAll(other.reports_);
            }
            onChanged();
          }
        } else {
          if (!other.reports_.isEmpty()) {
            if (reportsBuilder_.isEmpty()) {
              reportsBuilder_.dispose();
              reportsBuilder_ = null;
              reports_ = other.reports_;
              bitField0_ = (bitField0_ & ~0x00000002);
              reportsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getReportsFieldBuilder() : null;
            } else {
              reportsBuilder_.addAllMessages(other.reports_);
            }
          }
        }
        if (ticketsBuilder_ == null) {
          if (!other.tickets_.isEmpty()) {
            if (tickets_.isEmpty()) {
              tickets_ = other.tickets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTicketsIsMutable();
              tickets_.addAll(other.tickets_);
            }
            onChanged();
          }
        } else {
          if (!other.tickets_.isEmpty()) {
            if (ticketsBuilder_.isEmpty()) {
              ticketsBuilder_.dispose();
              ticketsBuilder_ = null;
              tickets_ = other.tickets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              ticketsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTicketsFieldBuilder() : null;
            } else {
              ticketsBuilder_.addAllMessages(other.tickets_);
            }
          }
        }
        if (beaconsBuilder_ == null) {
          if (!other.beacons_.isEmpty()) {
            if (beacons_.isEmpty()) {
              beacons_ = other.beacons_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureBeaconsIsMutable();
              beacons_.addAll(other.beacons_);
            }
            onChanged();
          }
        } else {
          if (!other.beacons_.isEmpty()) {
            if (beaconsBuilder_.isEmpty()) {
              beaconsBuilder_.dispose();
              beaconsBuilder_ = null;
              beacons_ = other.beacons_;
              bitField0_ = (bitField0_ & ~0x00000008);
              beaconsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBeaconsFieldBuilder() : null;
            } else {
              beaconsBuilder_.addAllMessages(other.beacons_);
            }
          }
        }
        if (sensorsBuilder_ == null) {
          if (!other.sensors_.isEmpty()) {
            if (sensors_.isEmpty()) {
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSensorsIsMutable();
              sensors_.addAll(other.sensors_);
            }
            onChanged();
          }
        } else {
          if (!other.sensors_.isEmpty()) {
            if (sensorsBuilder_.isEmpty()) {
              sensorsBuilder_.dispose();
              sensorsBuilder_ = null;
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000010);
              sensorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSensorsFieldBuilder() : null;
            } else {
              sensorsBuilder_.addAllMessages(other.sensors_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.naru.park.ParkModel.UIParkResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.naru.park.ParkModel.UIParkResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object token_ = "";
      /**
       * <code>string token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.naru.park.ParkModel.SensorReport> reports_ =
        java.util.Collections.emptyList();
      private void ensureReportsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          reports_ = new java.util.ArrayList<org.naru.park.ParkModel.SensorReport>(reports_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder> reportsBuilder_;

      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public java.util.List<org.naru.park.ParkModel.SensorReport> getReportsList() {
        if (reportsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reports_);
        } else {
          return reportsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public int getReportsCount() {
        if (reportsBuilder_ == null) {
          return reports_.size();
        } else {
          return reportsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport getReports(int index) {
        if (reportsBuilder_ == null) {
          return reports_.get(index);
        } else {
          return reportsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder setReports(
          int index, org.naru.park.ParkModel.SensorReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.set(index, value);
          onChanged();
        } else {
          reportsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder setReports(
          int index, org.naru.park.ParkModel.SensorReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.set(index, builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder addReports(org.naru.park.ParkModel.SensorReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.add(value);
          onChanged();
        } else {
          reportsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder addReports(
          int index, org.naru.park.ParkModel.SensorReport value) {
        if (reportsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportsIsMutable();
          reports_.add(index, value);
          onChanged();
        } else {
          reportsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder addReports(
          org.naru.park.ParkModel.SensorReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.add(builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder addReports(
          int index, org.naru.park.ParkModel.SensorReport.Builder builderForValue) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.add(index, builderForValue.build());
          onChanged();
        } else {
          reportsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder addAllReports(
          java.lang.Iterable<? extends org.naru.park.ParkModel.SensorReport> values) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reports_);
          onChanged();
        } else {
          reportsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder clearReports() {
        if (reportsBuilder_ == null) {
          reports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          reportsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public Builder removeReports(int index) {
        if (reportsBuilder_ == null) {
          ensureReportsIsMutable();
          reports_.remove(index);
          onChanged();
        } else {
          reportsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport.Builder getReportsBuilder(
          int index) {
        return getReportsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReportOrBuilder getReportsOrBuilder(
          int index) {
        if (reportsBuilder_ == null) {
          return reports_.get(index);  } else {
          return reportsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public java.util.List<? extends org.naru.park.ParkModel.SensorReportOrBuilder> 
           getReportsOrBuilderList() {
        if (reportsBuilder_ != null) {
          return reportsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reports_);
        }
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport.Builder addReportsBuilder() {
        return getReportsFieldBuilder().addBuilder(
            org.naru.park.ParkModel.SensorReport.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public org.naru.park.ParkModel.SensorReport.Builder addReportsBuilder(
          int index) {
        return getReportsFieldBuilder().addBuilder(
            index, org.naru.park.ParkModel.SensorReport.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.SensorReport reports = 2;</code>
       */
      public java.util.List<org.naru.park.ParkModel.SensorReport.Builder> 
           getReportsBuilderList() {
        return getReportsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder> 
          getReportsFieldBuilder() {
        if (reportsBuilder_ == null) {
          reportsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.naru.park.ParkModel.SensorReport, org.naru.park.ParkModel.SensorReport.Builder, org.naru.park.ParkModel.SensorReportOrBuilder>(
                  reports_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          reports_ = null;
        }
        return reportsBuilder_;
      }

      private java.util.List<org.naru.park.ParkModel.UserTicket> tickets_ =
        java.util.Collections.emptyList();
      private void ensureTicketsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tickets_ = new java.util.ArrayList<org.naru.park.ParkModel.UserTicket>(tickets_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder> ticketsBuilder_;

      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public java.util.List<org.naru.park.ParkModel.UserTicket> getTicketsList() {
        if (ticketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tickets_);
        } else {
          return ticketsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public int getTicketsCount() {
        if (ticketsBuilder_ == null) {
          return tickets_.size();
        } else {
          return ticketsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public org.naru.park.ParkModel.UserTicket getTickets(int index) {
        if (ticketsBuilder_ == null) {
          return tickets_.get(index);
        } else {
          return ticketsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder setTickets(
          int index, org.naru.park.ParkModel.UserTicket value) {
        if (ticketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketsIsMutable();
          tickets_.set(index, value);
          onChanged();
        } else {
          ticketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder setTickets(
          int index, org.naru.park.ParkModel.UserTicket.Builder builderForValue) {
        if (ticketsBuilder_ == null) {
          ensureTicketsIsMutable();
          tickets_.set(index, builderForValue.build());
          onChanged();
        } else {
          ticketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder addTickets(org.naru.park.ParkModel.UserTicket value) {
        if (ticketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketsIsMutable();
          tickets_.add(value);
          onChanged();
        } else {
          ticketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder addTickets(
          int index, org.naru.park.ParkModel.UserTicket value) {
        if (ticketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTicketsIsMutable();
          tickets_.add(index, value);
          onChanged();
        } else {
          ticketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder addTickets(
          org.naru.park.ParkModel.UserTicket.Builder builderForValue) {
        if (ticketsBuilder_ == null) {
          ensureTicketsIsMutable();
          tickets_.add(builderForValue.build());
          onChanged();
        } else {
          ticketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder addTickets(
          int index, org.naru.park.ParkModel.UserTicket.Builder builderForValue) {
        if (ticketsBuilder_ == null) {
          ensureTicketsIsMutable();
          tickets_.add(index, builderForValue.build());
          onChanged();
        } else {
          ticketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder addAllTickets(
          java.lang.Iterable<? extends org.naru.park.ParkModel.UserTicket> values) {
        if (ticketsBuilder_ == null) {
          ensureTicketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tickets_);
          onChanged();
        } else {
          ticketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder clearTickets() {
        if (ticketsBuilder_ == null) {
          tickets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          ticketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public Builder removeTickets(int index) {
        if (ticketsBuilder_ == null) {
          ensureTicketsIsMutable();
          tickets_.remove(index);
          onChanged();
        } else {
          ticketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public org.naru.park.ParkModel.UserTicket.Builder getTicketsBuilder(
          int index) {
        return getTicketsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public org.naru.park.ParkModel.UserTicketOrBuilder getTicketsOrBuilder(
          int index) {
        if (ticketsBuilder_ == null) {
          return tickets_.get(index);  } else {
          return ticketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public java.util.List<? extends org.naru.park.ParkModel.UserTicketOrBuilder> 
           getTicketsOrBuilderList() {
        if (ticketsBuilder_ != null) {
          return ticketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tickets_);
        }
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public org.naru.park.ParkModel.UserTicket.Builder addTicketsBuilder() {
        return getTicketsFieldBuilder().addBuilder(
            org.naru.park.ParkModel.UserTicket.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public org.naru.park.ParkModel.UserTicket.Builder addTicketsBuilder(
          int index) {
        return getTicketsFieldBuilder().addBuilder(
            index, org.naru.park.ParkModel.UserTicket.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.UserTicket tickets = 3;</code>
       */
      public java.util.List<org.naru.park.ParkModel.UserTicket.Builder> 
           getTicketsBuilderList() {
        return getTicketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder> 
          getTicketsFieldBuilder() {
        if (ticketsBuilder_ == null) {
          ticketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.naru.park.ParkModel.UserTicket, org.naru.park.ParkModel.UserTicket.Builder, org.naru.park.ParkModel.UserTicketOrBuilder>(
                  tickets_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          tickets_ = null;
        }
        return ticketsBuilder_;
      }

      private java.util.List<org.naru.park.ParkModel.Beacon> beacons_ =
        java.util.Collections.emptyList();
      private void ensureBeaconsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          beacons_ = new java.util.ArrayList<org.naru.park.ParkModel.Beacon>(beacons_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> beaconsBuilder_;

      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public java.util.List<org.naru.park.ParkModel.Beacon> getBeaconsList() {
        if (beaconsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(beacons_);
        } else {
          return beaconsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public int getBeaconsCount() {
        if (beaconsBuilder_ == null) {
          return beacons_.size();
        } else {
          return beaconsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public org.naru.park.ParkModel.Beacon getBeacons(int index) {
        if (beaconsBuilder_ == null) {
          return beacons_.get(index);
        } else {
          return beaconsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder setBeacons(
          int index, org.naru.park.ParkModel.Beacon value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.set(index, value);
          onChanged();
        } else {
          beaconsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder setBeacons(
          int index, org.naru.park.ParkModel.Beacon.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.set(index, builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder addBeacons(org.naru.park.ParkModel.Beacon value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.add(value);
          onChanged();
        } else {
          beaconsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder addBeacons(
          int index, org.naru.park.ParkModel.Beacon value) {
        if (beaconsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBeaconsIsMutable();
          beacons_.add(index, value);
          onChanged();
        } else {
          beaconsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder addBeacons(
          org.naru.park.ParkModel.Beacon.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.add(builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder addBeacons(
          int index, org.naru.park.ParkModel.Beacon.Builder builderForValue) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.add(index, builderForValue.build());
          onChanged();
        } else {
          beaconsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder addAllBeacons(
          java.lang.Iterable<? extends org.naru.park.ParkModel.Beacon> values) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, beacons_);
          onChanged();
        } else {
          beaconsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder clearBeacons() {
        if (beaconsBuilder_ == null) {
          beacons_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          beaconsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public Builder removeBeacons(int index) {
        if (beaconsBuilder_ == null) {
          ensureBeaconsIsMutable();
          beacons_.remove(index);
          onChanged();
        } else {
          beaconsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public org.naru.park.ParkModel.Beacon.Builder getBeaconsBuilder(
          int index) {
        return getBeaconsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public org.naru.park.ParkModel.BeaconOrBuilder getBeaconsOrBuilder(
          int index) {
        if (beaconsBuilder_ == null) {
          return beacons_.get(index);  } else {
          return beaconsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public java.util.List<? extends org.naru.park.ParkModel.BeaconOrBuilder> 
           getBeaconsOrBuilderList() {
        if (beaconsBuilder_ != null) {
          return beaconsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(beacons_);
        }
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public org.naru.park.ParkModel.Beacon.Builder addBeaconsBuilder() {
        return getBeaconsFieldBuilder().addBuilder(
            org.naru.park.ParkModel.Beacon.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public org.naru.park.ParkModel.Beacon.Builder addBeaconsBuilder(
          int index) {
        return getBeaconsFieldBuilder().addBuilder(
            index, org.naru.park.ParkModel.Beacon.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.Beacon beacons = 4;</code>
       */
      public java.util.List<org.naru.park.ParkModel.Beacon.Builder> 
           getBeaconsBuilderList() {
        return getBeaconsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder> 
          getBeaconsFieldBuilder() {
        if (beaconsBuilder_ == null) {
          beaconsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.naru.park.ParkModel.Beacon, org.naru.park.ParkModel.Beacon.Builder, org.naru.park.ParkModel.BeaconOrBuilder>(
                  beacons_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          beacons_ = null;
        }
        return beaconsBuilder_;
      }

      private java.util.List<org.naru.park.ParkModel.Sensor> sensors_ =
        java.util.Collections.emptyList();
      private void ensureSensorsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          sensors_ = new java.util.ArrayList<org.naru.park.ParkModel.Sensor>(sensors_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> sensorsBuilder_;

      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public java.util.List<org.naru.park.ParkModel.Sensor> getSensorsList() {
        if (sensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensors_);
        } else {
          return sensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public int getSensorsCount() {
        if (sensorsBuilder_ == null) {
          return sensors_.size();
        } else {
          return sensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public org.naru.park.ParkModel.Sensor getSensors(int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);
        } else {
          return sensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder setSensors(
          int index, org.naru.park.ParkModel.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.set(index, value);
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder setSensors(
          int index, org.naru.park.ParkModel.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder addSensors(org.naru.park.ParkModel.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
          int index, org.naru.park.ParkModel.Sensor value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(index, value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
          org.naru.park.ParkModel.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder addSensors(
          int index, org.naru.park.ParkModel.Sensor.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder addAllSensors(
          java.lang.Iterable<? extends org.naru.park.ParkModel.Sensor> values) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sensors_);
          onChanged();
        } else {
          sensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public Builder removeSensors(int index) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.remove(index);
          onChanged();
        } else {
          sensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public org.naru.park.ParkModel.Sensor.Builder getSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public org.naru.park.ParkModel.SensorOrBuilder getSensorsOrBuilder(
          int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);  } else {
          return sensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public java.util.List<? extends org.naru.park.ParkModel.SensorOrBuilder> 
           getSensorsOrBuilderList() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensors_);
        }
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public org.naru.park.ParkModel.Sensor.Builder addSensorsBuilder() {
        return getSensorsFieldBuilder().addBuilder(
            org.naru.park.ParkModel.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public org.naru.park.ParkModel.Sensor.Builder addSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().addBuilder(
            index, org.naru.park.ParkModel.Sensor.getDefaultInstance());
      }
      /**
       * <code>repeated .org.naru.park.Sensor sensors = 5;</code>
       */
      public java.util.List<org.naru.park.ParkModel.Sensor.Builder> 
           getSensorsBuilderList() {
        return getSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.naru.park.ParkModel.Sensor, org.naru.park.ParkModel.Sensor.Builder, org.naru.park.ParkModel.SensorOrBuilder>(
                  sensors_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.naru.park.UIParkResponse)
    }

    // @@protoc_insertion_point(class_scope:org.naru.park.UIParkResponse)
    private static final org.naru.park.ParkModel.UIParkResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.naru.park.ParkModel.UIParkResponse();
    }

    public static org.naru.park.ParkModel.UIParkResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UIParkResponse>
        PARSER = new com.google.protobuf.AbstractParser<UIParkResponse>() {
      public UIParkResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UIParkResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UIParkResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UIParkResponse> getParserForType() {
      return PARSER;
    }

    public org.naru.park.ParkModel.UIParkResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_Beacon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_Beacon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_RecordedUserTicket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_RecordedUserTicket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_UserTicket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_UserTicket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_Sensor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_Sensor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_SensorReport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_SensorReport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_UIParkRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_UIParkRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_naru_park_UIParkResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_naru_park_UIParkResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020park_model.proto\022\rorg.naru.park\"\306\001\n\006Be" +
      "acon\022\n\n\002id\030\001 \001(\t\022\013\n\003id1\030\002 \001(\t\022\013\n\003id2\030\003 \001" +
      "(\t\022\013\n\003id3\030\004 \001(\t\022\023\n\013description\030\005 \001(\t\022.\n\013" +
      "beacon_type\030\006 \001(\0162\031.org.naru.park.Beacon" +
      "Type\022\025\n\rannotated_lat\030\007 \001(\001\022\026\n\016annotated" +
      "_long\030\010 \001(\001\022\025\n\rbeacon_search\030\t \001(\t\"\274\002\n\022R" +
      "ecordedUserTicket\022\n\n\002id\030\001 \001(\t\022\025\n\rrecorde" +
      "d_date\030\002 \001(\003\022\013\n\003id1\030\003 \001(\t\022\013\n\003id2\030\004 \001(\t\022\013" +
      "\n\003id3\030\005 \001(\t\022\021\n\tsensor_id\030\006 \001(\t\022\023\n\013sensor" +
      "_name\030\007 \001(\t\022\032\n\022sensor_description\030\010 \001(\t\022",
      "\034\n\024distance_from_sensor\030\t \001(\001\022\022\n\nsensor_" +
      "lat\030\n \001(\001\022\023\n\013sensor_long\030\013 \001(\001\022\035\n\025sensor" +
      "_connected_wifi\030\014 \001(\t\022\033\n\023connected_wifi_" +
      "rssi\030\r \001(\005\022\025\n\rbeacon_search\030\016 \001(\t\"\216\001\n\nUs" +
      "erTicket\022\n\n\002id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022%\n" +
      "\006beacon\030\003 \001(\0132\025.org.naru.park.Beacon\022\022\n\n" +
      "issue_date\030\004 \001(\003\022\027\n\017expiration_date\030\005 \001(" +
      "\003\022\017\n\007display\030\006 \001(\t\">\n\006Sensor\022\n\n\002id\030\001 \001(\t" +
      "\022\023\n\013device_name\030\002 \001(\t\022\023\n\013description\030\003 \001" +
      "(\t\"\334\001\n\014SensorReport\022\n\n\002id\030\001 \001(\t\0222\n\007beaco",
      "ns\030\002 \003(\0132!.org.naru.park.RecordedUserTic" +
      "ket\022%\n\006sensor\030\003 \001(\0132\025.org.naru.park.Sens" +
      "or\022\013\n\003lat\030\004 \001(\001\022\014\n\004long\030\005 \001(\001\022\026\n\016connect" +
      "ed_wifi\030\006 \001(\t\022\033\n\023connected_wifi_rssi\030\007 \001" +
      "(\005\022\025\n\rrecorded_date\030\010 \001(\003\"\361\001\n\rUIParkRequ" +
      "est\022\r\n\005token\030\001 \001(\t\0222\n\rsensor_report\030\002 \001(" +
      "\0132\033.org.naru.park.SensorReport\022%\n\006sensor" +
      "\030\003 \001(\0132\025.org.naru.park.Sensor\022)\n\006ticket\030" +
      "\004 \001(\0132\031.org.naru.park.UserTicket\022%\n\006beac" +
      "on\030\005 \001(\0132\025.org.naru.park.Beacon\022\022\n\nstart",
      "_time\030\006 \001(\003\022\020\n\010end_time\030\007 \001(\003\"\311\001\n\016UIPark" +
      "Response\022\r\n\005token\030\001 \001(\t\022,\n\007reports\030\002 \003(\013" +
      "2\033.org.naru.park.SensorReport\022*\n\007tickets" +
      "\030\003 \003(\0132\031.org.naru.park.UserTicket\022&\n\007bea" +
      "cons\030\004 \003(\0132\025.org.naru.park.Beacon\022&\n\007sen" +
      "sors\030\005 \003(\0132\025.org.naru.park.Sensor*$\n\nBea" +
      "conType\022\n\n\006TICKET\020\000\022\n\n\006SYSTEM\020\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_naru_park_Beacon_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_naru_park_Beacon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_Beacon_descriptor,
        new java.lang.String[] { "Id", "Id1", "Id2", "Id3", "Description", "BeaconType", "AnnotatedLat", "AnnotatedLong", "BeaconSearch", });
    internal_static_org_naru_park_RecordedUserTicket_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_naru_park_RecordedUserTicket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_RecordedUserTicket_descriptor,
        new java.lang.String[] { "Id", "RecordedDate", "Id1", "Id2", "Id3", "SensorId", "SensorName", "SensorDescription", "DistanceFromSensor", "SensorLat", "SensorLong", "SensorConnectedWifi", "ConnectedWifiRssi", "BeaconSearch", });
    internal_static_org_naru_park_UserTicket_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_naru_park_UserTicket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_UserTicket_descriptor,
        new java.lang.String[] { "Id", "UserId", "Beacon", "IssueDate", "ExpirationDate", "Display", });
    internal_static_org_naru_park_Sensor_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_naru_park_Sensor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_Sensor_descriptor,
        new java.lang.String[] { "Id", "DeviceName", "Description", });
    internal_static_org_naru_park_SensorReport_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_naru_park_SensorReport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_SensorReport_descriptor,
        new java.lang.String[] { "Id", "Beacons", "Sensor", "Lat", "Long", "ConnectedWifi", "ConnectedWifiRssi", "RecordedDate", });
    internal_static_org_naru_park_UIParkRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_naru_park_UIParkRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_UIParkRequest_descriptor,
        new java.lang.String[] { "Token", "SensorReport", "Sensor", "Ticket", "Beacon", "StartTime", "EndTime", });
    internal_static_org_naru_park_UIParkResponse_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_naru_park_UIParkResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_naru_park_UIParkResponse_descriptor,
        new java.lang.String[] { "Token", "Reports", "Tickets", "Beacons", "Sensors", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
